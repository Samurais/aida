{"version":3,"sources":["webpack:///./web/pages/index.tsx","webpack:///./web/components/Logo.tsx","webpack:///./web/components/Landing/LandingFooter.tsx","webpack:///./web/components/Landing/LandingHeader.tsx","webpack:///./web/components/Landing/LandingMain.tsx","webpack:///./web/components/Landing/LandingImage.tsx","webpack:///./web/components/Landing/LandingSecondary.tsx"],"names":["React","__webpack_require__","_reactHelmet","_interopRequireDefault","_LandingFooter","_LandingHeader","_LandingMain","_LandingSecondary","d","e","__esModule","default","t","_ref","data","createElement","key","title","site","siteMetadata","meta","name","content","query","185","r","a","n","slice","Object","freeze","defineProperties","raw","value","defineProperty","Logo","ColoredText","styled","div","withConfig","displayName","o","extend","_templateObject","Footer","id","_row","className","_col","lg","sm","style","marginRight","i","footer","922","Header","_Logo","lineHeight","_gatsbyLink","to","href","fontSize","_icon","type","c","_styledComponents","header","923","OP","component","span","QueueAnim","leaveReverse","display","_button","textAlign","margin","_LandingImage","u","OverPack","924","fill","version","x","y","viewBox","width","height","points","931","Wrapper","delay","md","xs","color","fontWeight","paddingBottom","section"],"mappings":"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","file":"component---web-pages-index-tsx-46d9c347ec6526892b39.js","sourcesContent":["import { graphql } from 'gatsby';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport LandingFooter from '../components/Landing/LandingFooter';\nimport LandingHeader from '../components/Landing/LandingHeader';\nimport LandingMain from '../components/Landing/LandingMain';\nimport LandingSecondary from '../components/Landing/LandingSecondary';\n\nexport default ({ data }: any) => {\n    return [\n        <LandingHeader key=\"header\" />,\n        <LandingMain key=\"main\" />,\n        <LandingSecondary key=\"secondary\" />,\n        <LandingFooter key=\"footer\" />,\n        <Helmet\n            key=\"helmet\"\n            title={data.site.siteMetadata.title}\n            meta={[\n                { name: 'description', content: data.site.siteMetadata.title },\n                {\n                    content:\n                        'aida, chatito, chatbots, ai, nlu, nlp, natural language processing, tensorflowjs, keras, named entity recognition, text classification',\n                    name: 'keywords'\n                }\n            ]}\n        />\n    ];\n};\n\nexport const query = graphql`\n    query IndexQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`;\n","import '@babel/polyfill';\nimport styled from 'styled-components';\n\n// The Button from the last section without the interpolations\nexport const ColoredText = styled.div`\n    @keyframes text-gradient {\n        to {\n            background-position: -300% center;\n        }\n    }\n    font-weight: bold;\n    color: #1890ff;\n    display: inline-block;\n    text-decoration: none;\n    background-image: linear-gradient(to right, #1890ff 25%, #c4ce35 50%, #ac24e2 75%, #1890ff 100%);\n    background-size: 300% auto;\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    animation: text-gradient 16s ease-in-out infinite;\n`;\n\nexport const Logo = ColoredText.extend`\n    text-align: center;\n    font-size: 19px;\n`;\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Footer = styled.footer`\n    background-color: #4c4c4c;\n    color: rgba(255, 255, 255, 0.65);\n    clear: both;\n    font-size: 12px;\n    position: relative;\n    .bottom-bar {\n        border-top: 1px solid #4c4c4c;\n        text-align: right;\n        padding: 20px 24px;\n        margin: 0;\n        line-height: 24px;\n    }\n`;\n\nexport default function LandingFooter() {\n    return (\n        <Footer id=\"footer\">\n            <Row className=\"bottom-bar\">\n                <Col lg={6} sm={24} />\n                <Col lg={18} sm={24}>\n                    <span style={{ marginRight: 12 }}>Â© 2018 Rodrigo Pimentel</span>\n                </Col>\n            </Row>\n        </Footer>\n    );\n}\n","import { Icon } from 'antd';\nimport Link from 'gatsby-link';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Logo } from '../Logo';\n\nconst Header = styled.header`\n    height: 64px;\n    padding: 0 32px;\n    width: 100%;\n    .github-link {\n        float: right;\n        height: 100%;\n        line-height: 64px;\n    }\n`;\n\nexport default function LandingHeader() {\n    return (\n        <Header key=\"landing-header\">\n            <Logo style={{ lineHeight: '64px' }}>\n                <Link to=\"/\" href=\"/\">\n                    {`< Aida />`}\n                </Link>\n            </Logo>\n            <div className=\"github-link\">\n                <a href=\"https://github.com/rodrigopivi/aida\" title=\"Aida\" style={{ fontSize: 26 }}>\n                    <Icon type=\"github\" />\n                </a>\n            </div>\n        </Header>\n    );\n}\n","import { Button, Col, Row } from 'antd';\nimport Link from 'gatsby-link';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { ColoredText } from '../Logo';\nimport LandingImage from './LandingImage';\n\n// tslint:disable-next-line:no-var-requires\nconst QueueAnim = require('rc-queue-anim').default;\n// tslint:disable-next-line:no-var-requires\nconst OverPack = require('rc-scroll-anim/lib/ScrollOverPack');\n\nconst OP = styled(OverPack)`\n    background-color: #f8fafe;\n    width: 100%;\n    padding: 0;\n    overflow: hidden;\n    min-height: 405px;\n    .page {\n        width: 90%;\n        max-width: 1200px;\n        margin: auto;\n        position: relative;\n        h2 {\n            margin-bottom: 30px;\n            font-size: 2rem;\n        }\n        .separator {\n            margin-bottom: 35px;\n            display: inline-block;\n            width: 30px;\n            height: 5px;\n            background: #1890ff;\n            border-radius: 2.5px;\n        }\n    }\n    .page {\n        padding: 62px 0 32px;\n    }\n    .info-content {\n        max-width: 900px;\n        line-height: 48px;\n        margin: 0 auto;\n        font-size: 20px;\n        font-weight: 300;\n    }\n    .text-center: {\n        text-align: center;\n    }\n`;\n\nexport default function LandingMain() {\n    return (\n        <OP component=\"section\">\n            <Row type=\"flex\" className=\"page text-center\">\n                <Col span={17}>\n                    <QueueAnim type=\"bottom\" leaveReverse key=\"landing-main\">\n                        <ColoredText style={{ display: 'block' }}>\n                            <h2 key=\"title\">Build conversational user experiences</h2>\n                        </ColoredText>\n                        <span key=\"line\" className=\"separator\" />\n                        <QueueAnim type=\"bottom\" className=\"info-content\" key=\"landing-main-content\">\n                            <span key=\"1\">Your application can understand natural language privately and without infrastructure.</span>\n                            <br />\n                            <span key=\"2\">\n                                Use open source AI models that can train from the browser, nodejs or python and can run everywhere.\n                            </span>\n                            <br />\n                            <Link to=\"/overview\" href=\"/overview\" key=\"3\">\n                                <Button type=\"primary\">Get started</Button>\n                            </Link>\n                        </QueueAnim>\n                    </QueueAnim>\n                </Col>\n                <Col span={7} style={{ textAlign: 'center', margin: 'auto' }}>\n                    <LandingImage />\n                </Col>\n            </Row>\n        </OP>\n    );\n}\n","import * as React from 'react';\n\nexport default function BannerImage() {\n    return (\n        <svg fill=\"#51A7F9\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\n            <g>\n                <rect x=\"5\" y=\"38.9\" width=\"4.2\" height=\"8.3\" />\n                <rect x=\"90.8\" y=\"38.9\" width=\"4.2\" height=\"8.3\" />\n                <polygon points=\"50.7,16 51.9,16 51.9,12 47.9,12 47.9,16 49.1,16  \" />\n                <path d=\"M80.9,21.6H50.7V16h-1.6v5.6H19.3c-3.7,0-6.7,3-6.7,6.8v43.8v15.6c0,0.2,0.2,0.3,0.4,0.2l20.1-15.7c0,0,0.1-0.1,0.2-0.1   h47.4c3.7,0,6.7-3,6.7-6.8V28.1C87.4,24.5,84.5,21.6,80.9,21.6z M40,53.2h-6V38.9h6V53.2z M66.1,53.2h-6V38.9h6V53.2z\" />\n            </g>\n        </svg>\n    );\n}\n","import { Col, Icon, Row } from 'antd';\nimport Link from 'gatsby-link';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\n// tslint:disable-next-line:no-var-requires\nconst QueueAnim = require('rc-queue-anim').default;\n\nconst Wrapper = styled.section`\n    width: 100%;\n    padding: 0;\n    overflow: hidden;\n    background: #f8fafe;\n    padding-bottom: 100px;\n    overflow: initial;\n    min-height: 372px;\n    .page {\n        width: 90%;\n        max-width: 1200px;\n        margin: auto;\n        position: relative;\n        h2 {\n            margin-bottom: 30px;\n            font-size: 2rem;\n        }\n        .separator {\n            margin-bottom: 65px;\n            display: inline-block;\n            width: 30px;\n            height: 5px;\n            background: #1890ff;\n            border-radius: 2.5px;\n        }\n    }\n    .card {\n        transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;\n        position: relative;\n        color: #868e96;\n        display: inline-block;\n        max-width: 360px;\n        width: 100%;\n        height: 312px;\n        padding: 32px;\n        box-shadow: 0 2px 2px rgba(84, 48, 132, 0.06);\n        margin: 0 auto;\n        flex-direction: column;\n        word-wrap: break-word;\n        background-color: #fff;\n        background-clip: border-box;\n        text-align: center;\n        border-radius: 4px;\n        .card-img-top {\n            width: 100%;\n            border-top-left-radius: calc(0.25rem - 1px);\n            border-top-right-radius: calc(0.25rem - 1px);\n        }\n        h3 {\n            font-size: 30px;\n        }\n        img {\n            height: 50px;\n            margin: 20px 0;\n        }\n        &:hover {\n            text-decoration: none;\n            transform: translateY(-12px);\n            box-shadow: 0 12px 24px rgba(84, 48, 132, 0.06);\n        }\n    }\n`;\n\nexport default function LandingSecondary() {\n    return (\n        <Wrapper>\n            <QueueAnim component={Row} type=\"bottom\" className=\"page row text-center\" delay={500}>\n                <Col className=\"card-wrapper\" key=\"1\" md={8} xs={24}>\n                    <Link className=\"card\" href=\"/overview\" to=\"/overview\">\n                        <h3>Dataset generation</h3>\n                        <Icon type=\"database\" style={{ color: '#1890ff', fontWeight: 'bold', fontSize: '6em', paddingBottom: '.3em' }} />\n                        <div className=\"card-body\">\n                            <span className=\"title\">\n                                Generate and modularize datasets for natural language understanding neural network models in a breeze using\n                                Chatito DSL.\n                            </span>\n                        </div>\n                    </Link>\n                </Col>\n                <Col className=\"card-wrapper\" key=\"2\" md={8} xs={24}>\n                    <Link className=\"card\" href=\"/overview\" to=\"/overview\">\n                        <h3>Run everywhere</h3>\n                        <Icon type=\"rocket\" style={{ color: '#1890ff', fontWeight: 'bold', fontSize: '6em', paddingBottom: '.3em' }} />\n                        <div className=\"card-body\">\n                            <span className=\"title\">\n                                Implemented with TF.js and Keras to train from browsers, nodejs or python and run everywhere including iOS,\n                                Android and IoT.\n                            </span>\n                        </div>\n                    </Link>\n                </Col>\n                <Col className=\"card-wrapper\" key=\"3\" md={8} xs={24}>\n                    <Link className=\"card\" href=\"/overview\" to=\"/overview\">\n                        <h3>Easy integration</h3>\n                        <Icon type=\"api\" style={{ color: '#1890ff', fontWeight: 'bold', fontSize: '6em', paddingBottom: '.3em' }} />\n                        <div className=\"card-body\">\n                            <span className=\"title\">\n                                Fully customizable, open source, low memory, works offline, runs in device. Use the tools and environment\n                                you choose.\n                            </span>\n                        </div>\n                    </Link>\n                </Col>\n            </QueueAnim>\n        </Wrapper>\n    );\n}\n"],"sourceRoot":""}