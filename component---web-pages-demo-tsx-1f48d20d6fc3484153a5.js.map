{"version":3,"sources":["webpack:///./web/pages/demo.tsx","webpack:///./node_modules/rc-util/es/Children/toArray.js","webpack:///./node_modules/rc-select/es/Option.js","webpack:///./node_modules/rc-select/es/util.js","webpack:///./node_modules/rc-select/es/DropdownMenu.js","webpack:///./node_modules/rc-select/es/SelectTrigger.js","webpack:///./node_modules/rc-select/es/PropTypes.js","webpack:///./node_modules/rc-select/es/Select.js","webpack:///./node_modules/rc-select/es/OptGroup.js","webpack:///./node_modules/rc-select/es/index.js","webpack:///./web/components/Logo.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./web/components/DefaultHeader.tsx","webpack:///./web/components/Layout.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pipelines/zebraWings/pipeline.ts","webpack:///./src/languages/en/EnglishTokenizer.ts","webpack:///./src/languages/es/SpanishTokenizer.ts","webpack:///./src/pipelines/zebraWings/embeddings/EmbeddingsModel.ts","webpack:///./src/pipelines/zebraWings/embeddings/CombineNgramsLayer.ts","webpack:///./src/pipelines/zebraWings/embeddings/PreSavedEmbeddingsInitializer.ts","webpack:///./src/pipelines/zebraWings/models/classification.ts","webpack:///./src/pipelines/zebraWings/models/ner.ts","webpack:///./src/utils/dictionaryUtils.ts","webpack:///./web/components/TrainedPipelineTestInput.tsx","webpack:///./node_modules/antd/lib/date-picker/locale/en_US.js","webpack:///./node_modules/antd/lib/time-picker/locale/en_US.js","webpack:///./web/components/LoadPreTrainedExample.tsx","webpack:///./node_modules/antd/lib/select/style/css.js","webpack:///./node_modules/antd/lib/select/index.js","webpack:///./node_modules/rc-select/node_modules/warning/browser.js","webpack:///./node_modules/antd/lib/locale-provider/LocaleReceiver.js","webpack:///./node_modules/antd/lib/locale-provider/default.js","webpack:///./node_modules/rc-pagination/lib/locale/en_US.js","webpack:///./node_modules/rc-calendar/lib/locale/en_US.js","webpack:///./node_modules/antd/lib/calendar/locale/en_US.js"],"names":["React","__webpack_require__","_DefaultHeader","_interopRequireDefault","_Layout","_LoadPreTrainedExample","l","e","__esModule","default","t","_ref","location","createElement","style","minHeight","1063","n","r","o","i","a","s","u","c","p","f","d","h","m","g","toArray","children","ret","react_default","Children","forEach","push","Option_Option","_React$Component","Option","classCallCheck_default","this","possibleConstructorReturn_default","apply","arguments","inherits_default","Component","propTypes","value","prop_types_default","oneOfType","string","number","isSelectOption","es_Option","k","toTitle","title","getValuePropValue","child","props","key","type","isSelectOptGroup","label","Error","getPropValue","prop","isCombobox","combobox","isMultipleOrTags","multiple","tags","isMultipleOrTagsOrCombobox","isSingleMode","util_toArray","Array","isArray","getMapKey","preventDefaultEvent","preventDefault","findIndexInValueBySingleValue","singleValue","index","length","UNSELECTABLE_STYLE","userSelect","WebkitUserSelect","UNSELECTABLE_ATTRIBUTE","unselectable","defaultFilterFn","input","disabled","optionFilterProp","join","toLowerCase","indexOf","saveRef","instance","name","node","DropdownMenu_DropdownMenu","DropdownMenu","_this","call","DropdownMenu_initialiseProps","lastInputValue","inputValue","saveMenuRef","prototype","componentDidMount","scrollActiveItemToView","lastVisible","visible","shouldComponentUpdate","nextProps","componentDidUpdate","prevProps","renderMenu","_this2","menuItems","defaultActiveFirstOption","prefixCls","onMenuSelect","firstActiveValue","backfillValue","menuProps","onDeselect","onMenuDeselect","onSelect","onClick","selectedKeys","getSelectKeys","item","isMenuItemGroup","concat","itemValue","itemKey","activeKeyProps","clonedMenuItems","activeKey","foundFirst","clone","Object","react","cloneElement","ref","firstActiveItem","map","lastValue","es","extends_default","dropdownMenuStyle","defaultActiveFirst","role","render","overflow","onFocus","onPopupFocus","onMouseDown","onScroll","onPopupScroll","bool","any","object","func","onMenuDeSelect","_this3","itemComponent","react_dom","findDOMNode","scrollIntoViewOpts","onlyScrollIfNeeded","alignWithTop","raf_default","lib_default","menuRef","es_DropdownMenu","$","displayName","rc_trigger_es","BUILT_IN_PLACEMENTS","bottomLeft","points","offset","adjustX","adjustY","topLeft","SelectTrigger_SelectTrigger","SelectTrigger","SelectTrigger_initialiseProps","saveDropdownMenuRef","saveTriggerRef","state","dropdownWidth","setDropdownWidth","_popupClassName","hideAction","_props","objectWithoutProperties_default","dropdownAlign","showSearch","dropdownClassName","dropdownStyle","dropdownMatchSelectWidth","dropdownPrefixCls","getDropdownPrefixCls","popupClassName","popupElement","getDropdownElement","options","popupStyle","widthProp","showAction","popupPlacement","builtinPlacements","popupTransitionName","getDropdownTransitionName","onPopupVisibleChange","onDropdownVisibleChange","popup","popupAlign","popupVisible","getPopupContainer","classnames_default","filterOption","arrayOf","width","react_dom_default","offsetWidth","setState","getInnerMenu","dropdownMenuRef","getPopupDOMNode","triggerRef","getPopupDomNode","newProps","transitionName","animation","es_SelectTrigger","ne","valueType","propName","componentName","basicType","labelInValueShape","shape","isRequired","labelInValue","mode","SelectPropTypes","id","allowClear","showArrow","className","optionLabelProp","choiceTransitionName","onChange","onBlur","onSearch","onMouseEnter","onMouseLeave","onInputKeyDown","placeholder","defaultValue","maxTagTextLength","maxTagCount","maxTagPlaceholder","tokenSeparators","getInputElement","noop","Select_Select","Select","Select_initialiseProps","optionsInfo","getOptionsInfoFromProps","getValueFromProps","getInputValueForCombobox","open","defaultOpen","skipBuildOptionsInfo","saveInputRef","saveInputMirrorRef","saveTopCtrlRef","saveSelectTriggerRef","saveRootRef","saveSelectionRef","autoFocus","focus","inputNode","getInputDOMNode","mirrorNode","getInputMirrorDOMNode","clientWidth","forcePopupAlign","componentWillUnmount","clearFocusTime","clearBlurTime","dropdownContainer","unmountComponentAtNode","document","body","removeChild","selectionRef","blur","renderClear","_state","clear","onClearSelection","_rootCls","ctrlNode","renderTopControlNode","_options","renderFilterOptions","realOpen","getRealOpenState","dataOrAriaAttributeProps","hasOwnProperty","substr","extraSelectionProps","onKeyDown","tabIndex","rootCls","_focused","onOuterBlur","onOuterFocus","aria-autocomplete","aria-haspopup","aria-expanded","onArrowClick","defaultProps","notFoundContent","backfill","autoClearSearchValue","getDerivedStateFromProps","prevState","newState","getOptionsFromChildren","useDefaultValue","getLabelFromOption","option","preState","oldOptionsInfo","v","onInputChange","event","val","target","separators","lastIndexOf","nextValue","getValueByInput","fireChange","setOpenState","setInputValue","timeoutFocus","updateFocusClassName","keyCode","KeyCode","ENTER","DOWN","BACKSPACE","openIfHasChildren","stopPropagation","ESC","menu","selectTriggerRef","handleBackfill","removeSelected","selectedValue","fireSelect","_ref2","domEvent","onPlaceholderClick","maybeFocus","blurTimer","setTimeout","firstOption","findFirstMenuItem","found","getVLForOnChange","onChoiceAnimationLeave","getOptionInfoBySingleValue","info","defaultLabel","getOptionBySingleValue","getOptionsBySingleValue","values","getValueByLabel","keys","getVLBySingleValue","getLabelBySingleValue","vls_","vls","vl","getDropdownContainer","appendChild","getPlaceholderElement","hidden","display","_classnames","inputElement","autoComplete","inputCls","_len","fns","_key","_len2","args","_key2","topCtrlRef","querySelector","inputRef","inputMirrorRef","getPopupMenuComponent","needFocus","nextState","fireSearch","_props2","hasNewValue","reg","RegExp","split","filter","token","defaultFilter","filterFn","focusTimer","clearTimeout","rootRef","component_classes_default","add","remove","activeElement","selectedKey","isChildDisabled","count","some","_props3","childrenKeys","renderFilterOptionsFromChildren","String","menuItem","Item","attribute","every","unshift","sel","innerItems","ItemGroup","browser_default","childValue","_state2","innerNode","showSelectedValue","opacity","_getOptionInfoBySingl3","selectedValueNodes","limitedCountValue","maxTagPlaceholderEl","slice","omittedValues","content","choiceClassName","Animate","onLeave","component","react_lifecycles_compat_es","polyfill","es_Select","se","OptGroup_OptGroup","OptGroup","es_OptGroup","pe","T","fe","ae","__webpack_exports__","ce","174","freeze","defineProperties","raw","defineProperty","Logo","ColoredText","styled","div","withConfig","extend","_templateObject","module","exports","_react","_propTypes","_pageRenderer","_loader","ProdPageRenderer","pageResources","loader","getResourcesForPathname","pathname","InternalPageRenderer","PropTypes","_reactHelmet","meta","rel","href","sizes","color","204","Symbol","iterator","constructor","_gatsbyLink","_styledComponents","_Logo","enumerable","configurable","writable","ReferenceError","setPrototypeOf","getPrototypeOf","__proto__","Header","Content","Footer","demoRouteRE","trainRouteRE","StyledContent","MainLayout","defaultSelectedKeys","test","_layout","background","padding","textAlign","paddingLeft","paddingRight","to","flex","float","fontSize","_icon","flexDirection","Sider","breakpoint","collapsedWidth","theme","backgroundColor","_menu","P","221","PipelineModel","TypeError","225","graphql","get","withPrefix","replace","navigateTo","StaticQuery","StaticQueryContext","_publicPageRenderer","_parsePath","createContext","Consumer","staticQueryData","data","query","_EnglishTokenizer","_SpanishTokenizer","_EmbeddingsModel","_classification","_ner","done","Promise","resolve","then","defaultPipelineDefinition","config","classification","epochs","filterSizes","lowConfidenceThreshold","numFilters","batchSize","drop","embeddingDimensions","lossThresholdToStopTraining","maxNgrams","trainingValidationSplit","ner","maxCharsPerWord","AidaPipeline","cfg","_ref3","_defineProperty","_asyncToGenerator","regeneratorRuntime","mark","_callee","trainDataset","wrap","_context","prev","next","logger","log","classificationModel","train","nerModel","stop","_x","_callee2","testDataset","classificationStats","nerStats","_context2","sent","abrupt","_x2","sentences","predict","_callee3","cm","nm","_context3","tfModel","save","classificationPath","nerPath","_x3","pipelineDefinition","datasetParams","tokenizer","language","lang","englishTokenizer","spanishTokenizer","embeddingsModel","EmbeddingsModel","dictionary","maxWordsPerSentence","classificationTrainStatsHandler","nerTrainStatsHandler","classificationCfg","assign","trainStatsHandler","ClassificationModel","pretrainedClassifier","nerCfg","NerModel","pretrainedNer","zero","one","two","three","four","five","six","seven","eight","nine","sentence","trim","FILTER_CHARS_REGEXP","sanitizeSentence","WORD_SEPARATORS_REGEXP","w","word","grams","words","316","cero","uno","dos","tres","cuatro","cinco","seis","siete","ocho","nueve","317","tf","_CombineNgramsLayer","_PreSavedEmbeddingsInitializer","dict","maxWords","tidy","layers","dtype","embedded","model","entryModel","inputs","outputs","sentencesTensor","sentencesToWordIds","output","predictOnBatch","dispose","WORDS_TO_VECTORS_MAP","PRETRAINED","sentencesSplittedByWords","splitSentenceToWords","buffer","sentenceIndex","widx","letter","lidx","vec","UNKNOWN_NGRAM_KEY","x","set","toTensor","wordIndex","WORD_TO_ID_MAP","generateWordIdsFromNGrams","gram","gramIndex","console","warn","vecIds","addToVecsIfNotUndefined","allNgramsFound","splitWordToBiGrams","wt","setupModel","sequential","embedLayer","embedding","embeddingsInitializer","PreSavedEmbeddingsInitializer","inputDim","size","inputLength","maskZero","outputDim","trainable","timeDistributed","layer","inputShape","CombineNgramsLayer","_losses","Layer","kwargs","invokeCallHook","combined","sum","l2Normalize","320","_interopRequireWildcard","initializers","_lodash","getOwnPropertyDescriptor","_assertThisInitialized","_getPrototypeOf","Initializer","flatMat","flatMapDeep","toString","from","_toConsumableArray","tensor2d","serialization","SerializationMap","register","types","return","pretrainedModel","prediction","embeddedSentences","embed","dataSync","intents","sentencePreds","idx","confidence","intent","sort","b","trainYChunks","trainXChunks","enoughAccuracyReached","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_step$value","xChunk","dataLabels","hotEncodedLabels","chunk","trainY","trainX","entries","_slicedToArray","tensor1d","oneHot","fit","callbacks","onBatchEnd","nextFrame","shuffle","validationSplit","history","val_loss","batch","batchEpochs","epoch","currentBatchSize","tensorsInMemory","memory","numTensors","totalBatches","trainingAccuracy","acc","trainingLoss","loss","validationAccuracy","val_acc","validationLoss","t0","catch","finish","testExamples","resultsHandler","handler","stats","y","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_step2$value","predictions","defaultResultsLogger","correct","wrong","lowConfidence","testX","testY","debug","error","setup","numClasses","optimizer","adam","convLayer1","conv1d","activation","filters","kernelInitializer","kernelSize","maxpool1","maxPooling1d","poolSize","convLayer2","maxpool2","convLayer3","maxpool3","concatLayer","concatenate","axis","flat","flatten","dropOut","dropout","rate","flatPool1","concatForClassification","outClassification","dense","units","compile","metrics","classificationPred","_this$datasetParams","slotsToId","slotTypesLength","embeddedCharacters","sentencesToCharacterVectors","encodedIntent","intentEncoded","fill","intentsFlat","classLabel","flattenedPredictions","sp","wordTagPredictions","highestIndex","tp","ti","wordPredictionsChunk","rawPrediction","sentenceWordPredictionIds","sentenceWords","reduce","accumulator","currentIndex","current","currentSlotKey","find","slotKey","slots","trainY2Chunks","_this$config","slotsLength","_loop","_ret","trainY2","intentLabels","embeddedSentenceWords","embeddedSentenceWordChars","slotTags","asType","y2sentences","wordsSlotId","slotIds","pad","ohe","err","stack","delegateYield","_typeof","t1","testY2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_loop2","_iterator3","_step3","_context4","_step3$value","classifications","y2","sentenceIdx","expectedTags","predictedTags","tag","numSlotTypes","classLabelInput","classLabelRepeated","repeatVector","embeddedSentencesInput","embeddedCharactersInput","convCLayer1","dropOutC1","convCLayer2","concated","biLstm","bidirectional","lstm","returnSequences","mergeMode","maxIntentExamplesForTraining","intentsWithSlots","O","intentTrainingStats","intentTestingStats","processedSentences","intentsWithSlotsSet","Set","containsSlots","intentProcessedSentences","sentenceTokens","y2Tags","encodedSentenceFrag","slotName","slot","internalKey","tagsForSentence","intentId","findIndex","intentKey","maxTrainingExamplesForIntent","testing","training","dictJson","dictionaryCache","ID_TO_WORD_MAP","Map","324","SearchInput","_input","Search","TrainedPipelineTestInput","outTextContent","pipeline","JSON","stringify","inputSearch","getElementById","create","_row","justify","_col","span","_card","enterButton","handleSubmit","renderIntentsList","marginTop","411","_extends3","_en_US2","_en_US4","obj","locale","rangePlaceholder","timePickerLocale","412","420","421","439","442","760","_axios","_pipeline","_dictionaryUtils","_TrainedPipelineTestInput","S","_","E","LoadPreTrainedExample","downloadProgress","isDownloading","modelsLoaded","selectedModel","backend","modelsUrls","keras","web","loadModel","files","jsonFiles","embeddingDictionaryJson","downloadFiles","downloadsTrainedModel","buildDictionary","total","progress","downloads","all","file","axios","onDownloadProgress","progressEvent","totalLength","lengthComputable","getResponseHeader","Math","round","loaded","disposeVariables","window","disableDownload","buttonMessage","marginLeft","_progress","percent","marginBottom","_select","_button","loadSavedModels","794","795","799","_defineProperty3","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","newObj","_propTypes2","_rcSelect","_rcSelect2","_classnames2","_LocaleReceiver2","_default2","_warning2","__rest","getOwnPropertySymbols","oneOf","saveSelect","rcSelect","renderSelect","_classNames","_a","_a$className","restProps","cls","modeConfig","getNotFoundContent","SECRET_COMBOBOX_MODE_DO_NOT_USE","defaultLocale","800","801","LocaleReceiver","antLocale","context","localeFromContext","localeCode","exist","getLocale","getLocaleCode","contextTypes","802","_en_US6","_en_US8","Pagination","DatePicker","TimePicker","Calendar","Table","filterTitle","filterConfirm","filterReset","emptyText","selectAll","selectInvert","Modal","okText","cancelText","justOkText","Popconfirm","Transfer","titles","searchPlaceholder","itemUnit","itemsUnit","Upload","uploading","removeFile","uploadError","previewFile","803","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","804","today","now","backToToday","ok","month","year","timeSelect","dateSelect","weekSelect","monthSelect","yearSelect","decadeSelect","yearFormat","dateFormat","dayFormat","dateTimeFormat","monthBeforeYear","previousMonth","nextMonth","previousYear","nextYear","previousDecade","nextDecade","previousCentury","nextCentury","805"],"mappings":"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","file":"component---web-pages-demo-tsx-1f48d20d6fc3484153a5.js","sourcesContent":["import * as React from 'react';\nimport DefaultHeader from '../components/DefaultHeader';\nimport Layout from '../components/Layout';\nimport LoadPreTrainedExample from '../components/LoadPreTrainedExample';\n\nexport default ({ location }: any) => {\n    return (\n        <Layout location={location} style={{ minHeight: '95vh' }}>\n            <DefaultHeader />\n            <LoadPreTrainedExample />\n        </Layout>\n    );\n};\n","import React from 'react';\n\nexport default function toArray(children) {\n  var ret = [];\n  React.Children.forEach(children, function (c) {\n    ret.push(c);\n  });\n  return ret;\n}","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Option = function (_React$Component) {\n  _inherits(Option, _React$Component);\n\n  function Option() {\n    _classCallCheck(this, Option);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  return Option;\n}(React.Component);\n\nOption.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nOption.isSelectOption = true;\nexport default Option;","import React from 'react';\n\nexport function toTitle(title) {\n  if (typeof title === 'string') {\n    return title;\n  }\n  return null;\n}\n\nexport function getValuePropValue(child) {\n  if (!child) {\n    return null;\n  }\n\n  var props = child.props;\n  if ('value' in props) {\n    return props.value;\n  }\n  if (child.key) {\n    return child.key;\n  }\n  if (child.type && child.type.isSelectOptGroup && props.label) {\n    return props.label;\n  }\n  throw new Error('Need at least a key or a value or a label (only for OptGroup) for ' + child);\n}\n\nexport function getPropValue(child, prop) {\n  if (prop === 'value') {\n    return getValuePropValue(child);\n  }\n  return child.props[prop];\n}\n\nexport function isMultiple(props) {\n  return props.multiple;\n}\n\nexport function isCombobox(props) {\n  return props.combobox;\n}\n\nexport function isMultipleOrTags(props) {\n  return props.multiple || props.tags;\n}\n\nexport function isMultipleOrTagsOrCombobox(props) {\n  return isMultipleOrTags(props) || isCombobox(props);\n}\n\nexport function isSingleMode(props) {\n  return !isMultipleOrTagsOrCombobox(props);\n}\n\nexport function toArray(value) {\n  var ret = value;\n  if (value === undefined) {\n    ret = [];\n  } else if (!Array.isArray(value)) {\n    ret = [value];\n  }\n  return ret;\n}\n\nexport function getMapKey(value) {\n  return typeof value + '-' + value;\n}\n\nexport function preventDefaultEvent(e) {\n  e.preventDefault();\n}\n\nexport function findIndexInValueBySingleValue(value, singleValue) {\n  var index = -1;\n  for (var i = 0; i < value.length; i++) {\n    if (value[i] === singleValue) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n}\n\nexport function getLabelFromPropsValue(value, key) {\n  var label = void 0;\n  value = toArray(value);\n  for (var i = 0; i < value.length; i++) {\n    if (value[i].key === key) {\n      label = value[i].label;\n      break;\n    }\n  }\n  return label;\n}\n\nexport function getSelectKeys(menuItems, value) {\n  if (value === null || value === undefined) {\n    return [];\n  }\n  var selectedKeys = [];\n  React.Children.forEach(menuItems, function (item) {\n    if (item.type.isMenuItemGroup) {\n      selectedKeys = selectedKeys.concat(getSelectKeys(item.props.children, value));\n    } else {\n      var itemValue = getValuePropValue(item);\n      var itemKey = item.key;\n      if (findIndexInValueBySingleValue(value, itemValue) !== -1 && itemKey) {\n        selectedKeys.push(itemKey);\n      }\n    }\n  });\n  return selectedKeys;\n}\n\nexport var UNSELECTABLE_STYLE = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none'\n};\n\nexport var UNSELECTABLE_ATTRIBUTE = {\n  unselectable: 'on'\n};\n\nexport function findFirstMenuItem(children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    if (child.type.isMenuItemGroup) {\n      var found = findFirstMenuItem(child.props.children);\n      if (found) {\n        return found;\n      }\n    } else if (!child.props.disabled) {\n      return child;\n    }\n  }\n  return null;\n}\n\nexport function includesSeparators(string, separators) {\n  for (var i = 0; i < separators.length; ++i) {\n    if (string.lastIndexOf(separators[i]) > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function splitBySeparators(string, separators) {\n  var reg = new RegExp('[' + separators.join() + ']');\n  return string.split(reg).filter(function (token) {\n    return token;\n  });\n}\n\nexport function defaultFilterFn(input, child) {\n  if (child.props.disabled) {\n    return false;\n  }\n  var value = toArray(getPropValue(child, this.props.optionFilterProp)).join('');\n  return value.toLowerCase().indexOf(input.toLowerCase()) > -1;\n}\n\nexport function validateOptionValue(value, props) {\n  if (isSingleMode(props) || isMultiple(props)) {\n    return;\n  }\n  if (typeof value !== 'string') {\n    throw new Error('Invalid `value` of type `' + typeof value + '` supplied to Option, ' + 'expected `string` when `tags/combobox` is `true`.');\n  }\n}\n\nexport function saveRef(instance, name) {\n  return function (node) {\n    instance[name] = node;\n  };\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { cloneElement } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toArray from 'rc-util/es/Children/toArray';\nimport Menu from 'rc-menu';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport raf from 'raf';\nimport { getSelectKeys, preventDefaultEvent, saveRef } from './util';\n\nvar DropdownMenu = function (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  function DropdownMenu(props) {\n    _classCallCheck(this, DropdownMenu);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.lastInputValue = props.inputValue;\n    _this.saveMenuRef = saveRef(_this, 'menuRef');\n    return _this;\n  }\n\n  DropdownMenu.prototype.componentDidMount = function componentDidMount() {\n    this.scrollActiveItemToView();\n    this.lastVisible = this.props.visible;\n  };\n\n  DropdownMenu.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (!nextProps.visible) {\n      this.lastVisible = false;\n    }\n    // freeze when hide\n    return nextProps.visible;\n  };\n\n  DropdownMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var props = this.props;\n    if (!prevProps.visible && props.visible) {\n      this.scrollActiveItemToView();\n    }\n    this.lastVisible = props.visible;\n    this.lastInputValue = props.inputValue;\n  };\n\n  DropdownMenu.prototype.renderMenu = function renderMenu() {\n    var _this2 = this;\n\n    var props = this.props;\n    var menuItems = props.menuItems,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        value = props.value,\n        prefixCls = props.prefixCls,\n        multiple = props.multiple,\n        onMenuSelect = props.onMenuSelect,\n        inputValue = props.inputValue,\n        firstActiveValue = props.firstActiveValue,\n        backfillValue = props.backfillValue;\n\n    if (menuItems && menuItems.length) {\n      var menuProps = {};\n      if (multiple) {\n        menuProps.onDeselect = props.onMenuDeselect;\n        menuProps.onSelect = onMenuSelect;\n      } else {\n        menuProps.onClick = onMenuSelect;\n      }\n\n      var selectedKeys = getSelectKeys(menuItems, value);\n      var activeKeyProps = {};\n\n      var clonedMenuItems = menuItems;\n      if (selectedKeys.length || firstActiveValue) {\n        if (props.visible && !this.lastVisible) {\n          activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n        }\n        var foundFirst = false;\n        // set firstActiveItem via cloning menus\n        // for scroll into view\n        var clone = function clone(item) {\n          if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\n            foundFirst = true;\n            return cloneElement(item, {\n              ref: function ref(_ref) {\n                _this2.firstActiveItem = _ref;\n              }\n            });\n          }\n          return item;\n        };\n\n        clonedMenuItems = menuItems.map(function (item) {\n          if (item.type.isMenuItemGroup) {\n            var children = toArray(item.props.children).map(clone);\n            return cloneElement(item, {}, children);\n          }\n          return clone(item);\n        });\n      } else {\n        // Clear firstActiveItem when dropdown menu items was empty\n        // Avoid `Unable to find node on an unmounted component`\n        // https://github.com/ant-design/ant-design/issues/10774\n        this.firstActiveItem = null;\n      }\n\n      // clear activeKey when inputValue change\n      var lastValue = value && value[value.length - 1];\n      if (inputValue !== this.lastInputValue && (!lastValue || lastValue !== backfillValue)) {\n        activeKeyProps.activeKey = '';\n      }\n      return React.createElement(\n        Menu,\n        _extends({\n          ref: this.saveMenuRef,\n          style: this.props.dropdownMenuStyle,\n          defaultActiveFirst: defaultActiveFirstOption,\n          role: 'listbox'\n        }, activeKeyProps, {\n          multiple: multiple\n        }, menuProps, {\n          selectedKeys: selectedKeys,\n          prefixCls: prefixCls + '-menu'\n        }),\n        clonedMenuItems\n      );\n    }\n    return null;\n  };\n\n  DropdownMenu.prototype.render = function render() {\n    var renderMenu = this.renderMenu();\n    return renderMenu ? React.createElement(\n      'div',\n      {\n        style: { overflow: 'auto' },\n        onFocus: this.props.onPopupFocus,\n        onMouseDown: preventDefaultEvent,\n        onScroll: this.props.onPopupScroll\n      },\n      renderMenu\n    ) : null;\n  };\n\n  return DropdownMenu;\n}(React.Component);\n\nDropdownMenu.propTypes = {\n  defaultActiveFirstOption: PropTypes.bool,\n  value: PropTypes.any,\n  dropdownMenuStyle: PropTypes.object,\n  multiple: PropTypes.bool,\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  onMenuDeSelect: PropTypes.func,\n  onMenuSelect: PropTypes.func,\n  prefixCls: PropTypes.string,\n  menuItems: PropTypes.any,\n  inputValue: PropTypes.string,\n  visible: PropTypes.bool\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.scrollActiveItemToView = function () {\n    // scroll into view\n    var itemComponent = findDOMNode(_this3.firstActiveItem);\n    var props = _this3.props;\n\n    if (itemComponent) {\n      var scrollIntoViewOpts = {\n        onlyScrollIfNeeded: true\n      };\n      if ((!props.value || props.value.length === 0) && props.firstActiveValue) {\n        scrollIntoViewOpts.alignWithTop = true;\n      }\n\n      // Delay to scroll since current frame item position is not ready when pre view is by filter\n      // https://github.com/ant-design/ant-design/issues/11268#issuecomment-406634462\n      raf(function () {\n        scrollIntoView(itemComponent, findDOMNode(_this3.menuRef), scrollIntoViewOpts);\n      });\n    }\n  };\n};\n\nexport default DropdownMenu;\n\n\nDropdownMenu.displayName = 'DropdownMenu';","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Trigger from 'rc-trigger';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DropdownMenu from './DropdownMenu';\nimport ReactDOM from 'react-dom';\nimport { isSingleMode, saveRef } from './util';\n\nTrigger.displayName = 'Trigger';\n\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    }\n  }\n};\n\nvar SelectTrigger = function (_React$Component) {\n  _inherits(SelectTrigger, _React$Component);\n\n  function SelectTrigger(props) {\n    _classCallCheck(this, SelectTrigger);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.saveDropdownMenuRef = saveRef(_this, 'dropdownMenuRef');\n    _this.saveTriggerRef = saveRef(_this, 'triggerRef');\n\n    _this.state = {\n      dropdownWidth: null\n    };\n    return _this;\n  }\n\n  SelectTrigger.prototype.componentDidMount = function componentDidMount() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setDropdownWidth();\n  };\n\n  SelectTrigger.prototype.render = function render() {\n    var _popupClassName;\n\n    var _props = this.props,\n        onPopupFocus = _props.onPopupFocus,\n        props = _objectWithoutProperties(_props, ['onPopupFocus']);\n\n    var multiple = props.multiple,\n        visible = props.visible,\n        inputValue = props.inputValue,\n        dropdownAlign = props.dropdownAlign,\n        disabled = props.disabled,\n        showSearch = props.showSearch,\n        dropdownClassName = props.dropdownClassName,\n        dropdownStyle = props.dropdownStyle,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth;\n\n    var dropdownPrefixCls = this.getDropdownPrefixCls();\n    var popupClassName = (_popupClassName = {}, _popupClassName[dropdownClassName] = !!dropdownClassName, _popupClassName[dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single')] = 1, _popupClassName);\n    var popupElement = this.getDropdownElement({\n      menuItems: props.options,\n      onPopupFocus: onPopupFocus,\n      multiple: multiple,\n      inputValue: inputValue,\n      visible: visible\n    });\n    var hideAction = void 0;\n    if (disabled) {\n      hideAction = [];\n    } else if (isSingleMode(props) && !showSearch) {\n      hideAction = ['click'];\n    } else {\n      hideAction = ['blur'];\n    }\n    var popupStyle = _extends({}, dropdownStyle);\n    var widthProp = dropdownMatchSelectWidth ? 'width' : 'minWidth';\n    if (this.state.dropdownWidth) {\n      popupStyle[widthProp] = this.state.dropdownWidth + 'px';\n    }\n\n    return React.createElement(\n      Trigger,\n      _extends({}, props, {\n        showAction: disabled ? [] : this.props.showAction,\n        hideAction: hideAction,\n        ref: this.saveTriggerRef,\n        popupPlacement: 'bottomLeft',\n        builtinPlacements: BUILT_IN_PLACEMENTS,\n        prefixCls: dropdownPrefixCls,\n        popupTransitionName: this.getDropdownTransitionName(),\n        onPopupVisibleChange: props.onDropdownVisibleChange,\n        popup: popupElement,\n        popupAlign: dropdownAlign,\n        popupVisible: visible,\n        getPopupContainer: props.getPopupContainer,\n        popupClassName: classnames(popupClassName),\n        popupStyle: popupStyle\n      }),\n      props.children\n    );\n  };\n\n  return SelectTrigger;\n}(React.Component);\n\nSelectTrigger.propTypes = {\n  onPopupFocus: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  dropdownMatchSelectWidth: PropTypes.bool,\n  dropdownAlign: PropTypes.object,\n  visible: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  multiple: PropTypes.bool,\n  inputValue: PropTypes.string,\n  filterOption: PropTypes.any,\n  options: PropTypes.any,\n  prefixCls: PropTypes.string,\n  popupClassName: PropTypes.string,\n  children: PropTypes.any,\n  showAction: PropTypes.arrayOf(PropTypes.string)\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.setDropdownWidth = function () {\n    var width = ReactDOM.findDOMNode(_this2).offsetWidth;\n    if (width !== _this2.state.dropdownWidth) {\n      _this2.setState({ dropdownWidth: width });\n    }\n  };\n\n  this.getInnerMenu = function () {\n    return _this2.dropdownMenuRef && _this2.dropdownMenuRef.menuRef;\n  };\n\n  this.getPopupDOMNode = function () {\n    return _this2.triggerRef.getPopupDomNode();\n  };\n\n  this.getDropdownElement = function (newProps) {\n    var props = _this2.props;\n    return React.createElement(DropdownMenu, _extends({\n      ref: _this2.saveDropdownMenuRef\n    }, newProps, {\n      prefixCls: _this2.getDropdownPrefixCls(),\n      onMenuSelect: props.onMenuSelect,\n      onMenuDeselect: props.onMenuDeselect,\n      onPopupScroll: props.onPopupScroll,\n      value: props.value,\n      backfillValue: props.backfillValue,\n      firstActiveValue: props.firstActiveValue,\n      defaultActiveFirstOption: props.defaultActiveFirstOption,\n      dropdownMenuStyle: props.dropdownMenuStyle\n    }));\n  };\n\n  this.getDropdownTransitionName = function () {\n    var props = _this2.props;\n    var transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = _this2.getDropdownPrefixCls() + '-' + props.animation;\n    }\n    return transitionName;\n  };\n\n  this.getDropdownPrefixCls = function () {\n    return _this2.props.prefixCls + '-dropdown';\n  };\n};\n\nexport default SelectTrigger;\n\n\nSelectTrigger.displayName = 'SelectTrigger';","import PropTypes from 'prop-types';\n\nfunction valueType(props, propName, componentName) {\n  var basicType = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\n  var labelInValueShape = PropTypes.shape({\n    key: basicType.isRequired,\n    label: PropTypes.node\n  });\n  if (props.labelInValue) {\n    var validate = PropTypes.oneOfType([PropTypes.arrayOf(labelInValueShape), labelInValueShape]);\n    var error = validate.apply(undefined, arguments);\n    if (error) {\n      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`, ' + ('when you set `labelInValue` to `true`, `' + propName + '` should in ') + 'shape of `{ key: string | number, label?: ReactNode }`.');\n    }\n  } else if ((props.mode === 'multiple' || props.mode === 'tags' || props.multiple || props.tags) && props[propName] === '') {\n    return new Error('Invalid prop `' + propName + '` of type `string` supplied to `' + componentName + '`, ' + 'expected `array` when `multiple` or `tags` is `true`.');\n  } else {\n    var _validate = PropTypes.oneOfType([PropTypes.arrayOf(basicType), basicType]);\n    return _validate.apply(undefined, arguments);\n  }\n}\n\nexport var SelectPropTypes = {\n  id: PropTypes.string,\n  defaultActiveFirstOption: PropTypes.bool,\n  multiple: PropTypes.bool,\n  filterOption: PropTypes.any,\n  children: PropTypes.any,\n  showSearch: PropTypes.bool,\n  disabled: PropTypes.bool,\n  allowClear: PropTypes.bool,\n  showArrow: PropTypes.bool,\n  tags: PropTypes.bool,\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  transitionName: PropTypes.string,\n  optionLabelProp: PropTypes.string,\n  optionFilterProp: PropTypes.string,\n  animation: PropTypes.string,\n  choiceTransitionName: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onSelect: PropTypes.func,\n  onSearch: PropTypes.func,\n  onPopupScroll: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  placeholder: PropTypes.any,\n  onDeselect: PropTypes.func,\n  labelInValue: PropTypes.bool,\n  value: valueType,\n  defaultValue: valueType,\n  dropdownStyle: PropTypes.object,\n  maxTagTextLength: PropTypes.number,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  tokenSeparators: PropTypes.arrayOf(PropTypes.string),\n  getInputElement: PropTypes.func,\n  showAction: PropTypes.arrayOf(PropTypes.string)\n};","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* eslint func-names: 1 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { polyfill } from 'react-lifecycles-compat';\nimport KeyCode from 'rc-util/es/KeyCode';\nimport childrenToArray from 'rc-util/es/Children/toArray';\nimport classnames from 'classnames';\nimport Animate from 'rc-animate';\nimport classes from 'component-classes';\nimport { Item as MenuItem, ItemGroup as MenuItemGroup } from 'rc-menu';\nimport warning from 'warning';\nimport Option from './Option';\n\nimport { getPropValue, getValuePropValue, isCombobox, isMultipleOrTags, isMultipleOrTagsOrCombobox, isSingleMode, toArray, getMapKey, findIndexInValueBySingleValue, getLabelFromPropsValue, UNSELECTABLE_ATTRIBUTE, UNSELECTABLE_STYLE, preventDefaultEvent, findFirstMenuItem, includesSeparators, splitBySeparators, defaultFilterFn, validateOptionValue, saveRef, toTitle } from './util';\nimport SelectTrigger from './SelectTrigger';\nimport { SelectPropTypes } from './PropTypes';\n\nfunction noop() {}\n\nfunction chaining() {\n  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    // eslint-disable-line\n    // eslint-disable-line\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i] && typeof fns[i] === 'function') {\n        fns[i].apply(this, args);\n      }\n    }\n  };\n}\n\nvar Select = function (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  function Select(props) {\n    _classCallCheck(this, Select);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var optionsInfo = Select.getOptionsInfoFromProps(props);\n    _this.state = {\n      value: Select.getValueFromProps(props, true), // true: use default value\n      inputValue: props.combobox ? Select.getInputValueForCombobox(props, optionsInfo, true // use default value\n      ) : '',\n      open: props.defaultOpen,\n      optionsInfo: optionsInfo,\n      // a flag for aviod redundant getOptionsInfoFromProps call\n      skipBuildOptionsInfo: true\n    };\n\n    _this.saveInputRef = saveRef(_this, 'inputRef');\n    _this.saveInputMirrorRef = saveRef(_this, 'inputMirrorRef');\n    _this.saveTopCtrlRef = saveRef(_this, 'topCtrlRef');\n    _this.saveSelectTriggerRef = saveRef(_this, 'selectTriggerRef');\n    _this.saveRootRef = saveRef(_this, 'rootRef');\n    _this.saveSelectionRef = saveRef(_this, 'selectionRef');\n    return _this;\n  }\n\n  Select.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.autoFocus) {\n      this.focus();\n    }\n  };\n\n  Select.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (isMultipleOrTags(this.props)) {\n      var inputNode = this.getInputDOMNode();\n      var mirrorNode = this.getInputMirrorDOMNode();\n      if (inputNode.value) {\n        inputNode.style.width = '';\n        inputNode.style.width = mirrorNode.clientWidth + 'px';\n      } else {\n        inputNode.style.width = '';\n      }\n    }\n    this.forcePopupAlign();\n  };\n\n  Select.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.clearFocusTime();\n    this.clearBlurTime();\n    if (this.dropdownContainer) {\n      ReactDOM.unmountComponentAtNode(this.dropdownContainer);\n      document.body.removeChild(this.dropdownContainer);\n      this.dropdownContainer = null;\n    }\n  };\n\n  // combobox ignore\n\n\n  Select.prototype.focus = function focus() {\n    if (isSingleMode(this.props)) {\n      this.selectionRef.focus();\n    } else {\n      this.getInputDOMNode().focus();\n    }\n  };\n\n  Select.prototype.blur = function blur() {\n    if (isSingleMode(this.props)) {\n      this.selectionRef.blur();\n    } else {\n      this.getInputDOMNode().blur();\n    }\n  };\n\n  Select.prototype.renderClear = function renderClear() {\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        allowClear = _props.allowClear;\n    var _state = this.state,\n        value = _state.value,\n        inputValue = _state.inputValue;\n\n    var clear = React.createElement('span', _extends({\n      key: 'clear',\n      onMouseDown: preventDefaultEvent,\n      style: UNSELECTABLE_STYLE\n    }, UNSELECTABLE_ATTRIBUTE, {\n      className: prefixCls + '-selection__clear',\n      onClick: this.onClearSelection\n    }));\n    if (!allowClear) {\n      return null;\n    }\n    if (isCombobox(this.props)) {\n      if (inputValue) {\n        return clear;\n      }\n      return null;\n    }\n    if (inputValue || value.length) {\n      return clear;\n    }\n    return null;\n  };\n\n  Select.prototype.render = function render() {\n    var _rootCls;\n\n    var props = this.props;\n    var multiple = isMultipleOrTags(props);\n    var state = this.state;\n    var className = props.className,\n        disabled = props.disabled,\n        prefixCls = props.prefixCls;\n\n    var ctrlNode = this.renderTopControlNode();\n    var open = this.state.open;\n\n    if (open) {\n      this._options = this.renderFilterOptions();\n    }\n    var realOpen = this.getRealOpenState();\n    var options = this._options || [];\n    var dataOrAriaAttributeProps = {};\n    for (var key in props) {\n      if (props.hasOwnProperty(key) && (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-' || key === 'role')) {\n        dataOrAriaAttributeProps[key] = props[key];\n      }\n    }\n    var extraSelectionProps = _extends({}, dataOrAriaAttributeProps);\n    if (!isMultipleOrTagsOrCombobox(props)) {\n      extraSelectionProps = _extends({}, extraSelectionProps, {\n        onKeyDown: this.onKeyDown,\n        tabIndex: props.disabled ? -1 : 0\n      });\n    }\n    var rootCls = (_rootCls = {}, _rootCls[className] = !!className, _rootCls[prefixCls] = 1, _rootCls[prefixCls + '-open'] = open, _rootCls[prefixCls + '-focused'] = open || !!this._focused, _rootCls[prefixCls + '-combobox'] = isCombobox(props), _rootCls[prefixCls + '-disabled'] = disabled, _rootCls[prefixCls + '-enabled'] = !disabled, _rootCls[prefixCls + '-allow-clear'] = !!props.allowClear, _rootCls[prefixCls + '-no-arrow'] = !props.showArrow, _rootCls);\n    return React.createElement(\n      SelectTrigger,\n      {\n        onPopupFocus: this.onPopupFocus,\n        onMouseEnter: this.props.onMouseEnter,\n        onMouseLeave: this.props.onMouseLeave,\n        dropdownAlign: props.dropdownAlign,\n        dropdownClassName: props.dropdownClassName,\n        dropdownMatchSelectWidth: props.dropdownMatchSelectWidth,\n        defaultActiveFirstOption: props.defaultActiveFirstOption,\n        dropdownMenuStyle: props.dropdownMenuStyle,\n        transitionName: props.transitionName,\n        animation: props.animation,\n        prefixCls: props.prefixCls,\n        dropdownStyle: props.dropdownStyle,\n        combobox: props.combobox,\n        showSearch: props.showSearch,\n        options: options,\n        multiple: multiple,\n        disabled: disabled,\n        visible: realOpen,\n        inputValue: state.inputValue,\n        value: state.value,\n        backfillValue: state.backfillValue,\n        firstActiveValue: props.firstActiveValue,\n        onDropdownVisibleChange: this.onDropdownVisibleChange,\n        getPopupContainer: props.getPopupContainer,\n        onMenuSelect: this.onMenuSelect,\n        onMenuDeselect: this.onMenuDeselect,\n        onPopupScroll: props.onPopupScroll,\n        showAction: props.showAction,\n        ref: this.saveSelectTriggerRef\n      },\n      React.createElement(\n        'div',\n        {\n          id: props.id,\n          style: props.style,\n          ref: this.saveRootRef,\n          onBlur: this.onOuterBlur,\n          onFocus: this.onOuterFocus,\n          className: classnames(rootCls)\n        },\n        React.createElement(\n          'div',\n          _extends({\n            ref: this.saveSelectionRef,\n            key: 'selection',\n            className: prefixCls + '-selection\\n            ' + prefixCls + '-selection--' + (multiple ? 'multiple' : 'single'),\n            role: 'combobox',\n            'aria-autocomplete': 'list',\n            'aria-haspopup': 'true',\n            'aria-expanded': realOpen\n          }, extraSelectionProps),\n          ctrlNode,\n          this.renderClear(),\n          multiple || !props.showArrow ? null : React.createElement(\n            'span',\n            _extends({\n              key: 'arrow',\n              className: prefixCls + '-arrow',\n              style: UNSELECTABLE_STYLE\n            }, UNSELECTABLE_ATTRIBUTE, {\n              onClick: this.onArrowClick\n            }),\n            React.createElement('b', null)\n          )\n        )\n      )\n    );\n  };\n\n  return Select;\n}(React.Component);\n\nSelect.propTypes = SelectPropTypes;\nSelect.defaultProps = {\n  prefixCls: 'rc-select',\n  defaultOpen: false,\n  labelInValue: false,\n  defaultActiveFirstOption: true,\n  showSearch: true,\n  allowClear: false,\n  placeholder: '',\n  onChange: noop,\n  onFocus: noop,\n  onBlur: noop,\n  onSelect: noop,\n  onSearch: noop,\n  onDeselect: noop,\n  onInputKeyDown: noop,\n  showArrow: true,\n  dropdownMatchSelectWidth: true,\n  dropdownStyle: {},\n  dropdownMenuStyle: {},\n  optionFilterProp: 'value',\n  optionLabelProp: 'value',\n  notFoundContent: 'Not Found',\n  backfill: false,\n  showAction: ['click'],\n  tokenSeparators: [],\n  autoClearSearchValue: true\n};\n\nSelect.getDerivedStateFromProps = function (nextProps, prevState) {\n  var optionsInfo = prevState.skipBuildOptionsInfo ? prevState.optionsInfo : Select.getOptionsInfoFromProps(nextProps, prevState);\n\n  var newState = {\n    optionsInfo: optionsInfo,\n    skipBuildOptionsInfo: false\n  };\n\n  if ('open' in nextProps) {\n    newState.open = nextProps.open;\n  }\n\n  if ('value' in nextProps) {\n    var value = Select.getValueFromProps(nextProps);\n    newState.value = value;\n    if (nextProps.combobox) {\n      newState.inputValue = Select.getInputValueForCombobox(nextProps, optionsInfo);\n    }\n  }\n  return newState;\n};\n\nSelect.getOptionsFromChildren = function (children) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  React.Children.forEach(children, function (child) {\n    if (!child) {\n      return;\n    }\n    if (child.type.isSelectOptGroup) {\n      Select.getOptionsFromChildren(child.props.children, options);\n    } else {\n      options.push(child);\n    }\n  });\n  return options;\n};\n\nSelect.getInputValueForCombobox = function (props, optionsInfo, useDefaultValue) {\n  var value = [];\n  if ('value' in props && !useDefaultValue) {\n    value = toArray(props.value);\n  }\n  if ('defaultValue' in props && useDefaultValue) {\n    value = toArray(props.defaultValue);\n  }\n  if (value.length) {\n    value = value[0];\n  } else {\n    return '';\n  }\n  var label = value;\n  if (props.labelInValue) {\n    label = value.label;\n  } else if (optionsInfo[getMapKey(value)]) {\n    label = optionsInfo[getMapKey(value)].label;\n  }\n  if (label === undefined) {\n    label = '';\n  }\n  return label;\n};\n\nSelect.getLabelFromOption = function (props, option) {\n  return getPropValue(option, props.optionLabelProp);\n};\n\nSelect.getOptionsInfoFromProps = function (props, preState) {\n  var options = Select.getOptionsFromChildren(props.children);\n  var optionsInfo = {};\n  options.forEach(function (option) {\n    var singleValue = getValuePropValue(option);\n    optionsInfo[getMapKey(singleValue)] = {\n      option: option,\n      value: singleValue,\n      label: Select.getLabelFromOption(props, option),\n      title: option.props.title\n    };\n  });\n  if (preState) {\n    // keep option info in pre state value.\n    var oldOptionsInfo = preState.optionsInfo;\n    var value = preState.value;\n    value.forEach(function (v) {\n      var key = getMapKey(v);\n      if (!optionsInfo[key] && oldOptionsInfo[key] !== undefined) {\n        optionsInfo[key] = oldOptionsInfo[key];\n      }\n    });\n  }\n  return optionsInfo;\n};\n\nSelect.getValueFromProps = function (props, useDefaultValue) {\n  var value = [];\n  if ('value' in props && !useDefaultValue) {\n    value = toArray(props.value);\n  }\n  if ('defaultValue' in props && useDefaultValue) {\n    value = toArray(props.defaultValue);\n  }\n  if (props.labelInValue) {\n    value = value.map(function (v) {\n      return v.key;\n    });\n  }\n  return value;\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onInputChange = function (event) {\n    var tokenSeparators = _this2.props.tokenSeparators;\n\n    var val = event.target.value;\n    if (isMultipleOrTags(_this2.props) && tokenSeparators.length && includesSeparators(val, tokenSeparators)) {\n      var nextValue = _this2.getValueByInput(val);\n      if (nextValue !== undefined) {\n        _this2.fireChange(nextValue);\n      }\n      _this2.setOpenState(false, true);\n      _this2.setInputValue('', false);\n      return;\n    }\n    _this2.setInputValue(val);\n    _this2.setState({\n      open: true\n    });\n    if (isCombobox(_this2.props)) {\n      _this2.fireChange([val]);\n    }\n  };\n\n  this.onDropdownVisibleChange = function (open) {\n    if (open && !_this2._focused) {\n      _this2.clearBlurTime();\n      _this2.timeoutFocus();\n      _this2._focused = true;\n      _this2.updateFocusClassName();\n    }\n    _this2.setOpenState(open);\n  };\n\n  this.onKeyDown = function (event) {\n    var props = _this2.props;\n    if (props.disabled) {\n      return;\n    }\n    var keyCode = event.keyCode;\n    if (_this2.state.open && !_this2.getInputDOMNode()) {\n      _this2.onInputKeyDown(event);\n    } else if (keyCode === KeyCode.ENTER || keyCode === KeyCode.DOWN) {\n      _this2.setOpenState(true);\n      event.preventDefault();\n    }\n  };\n\n  this.onInputKeyDown = function (event) {\n    var props = _this2.props;\n    if (props.disabled) {\n      return;\n    }\n    var state = _this2.state;\n    var keyCode = event.keyCode;\n    if (isMultipleOrTags(props) && !event.target.value && keyCode === KeyCode.BACKSPACE) {\n      event.preventDefault();\n      var value = state.value;\n\n      if (value.length) {\n        _this2.removeSelected(value[value.length - 1]);\n      }\n      return;\n    }\n    if (keyCode === KeyCode.DOWN) {\n      if (!state.open) {\n        _this2.openIfHasChildren();\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n    } else if (keyCode === KeyCode.ENTER && state.open) {\n      // Aviod trigger form submit when select item\n      // https://github.com/ant-design/ant-design/issues/10861\n      event.preventDefault();\n    } else if (keyCode === KeyCode.ESC) {\n      if (state.open) {\n        _this2.setOpenState(false);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n\n    if (state.open) {\n      var menu = _this2.selectTriggerRef.getInnerMenu();\n      if (menu && menu.onKeyDown(event, _this2.handleBackfill)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  this.onMenuSelect = function (_ref) {\n    var item = _ref.item;\n\n    if (!item) {\n      return;\n    }\n    var value = _this2.state.value;\n    var props = _this2.props;\n    var selectedValue = getValuePropValue(item);\n    var lastValue = value[value.length - 1];\n    _this2.fireSelect(selectedValue);\n    if (isMultipleOrTags(props)) {\n      if (findIndexInValueBySingleValue(value, selectedValue) !== -1) {\n        return;\n      }\n      value = value.concat([selectedValue]);\n    } else {\n      if (lastValue && lastValue === selectedValue && selectedValue !== _this2.state.backfillValue) {\n        _this2.setOpenState(false, true);\n        return;\n      }\n      value = [selectedValue];\n      _this2.setOpenState(false, true);\n    }\n    _this2.fireChange(value);\n    var inputValue = void 0;\n    if (isCombobox(props)) {\n      inputValue = getPropValue(item, props.optionLabelProp);\n    } else {\n      inputValue = '';\n    }\n    if (props.autoClearSearchValue) {\n      _this2.setInputValue(inputValue, false);\n    }\n  };\n\n  this.onMenuDeselect = function (_ref2) {\n    var item = _ref2.item,\n        domEvent = _ref2.domEvent;\n\n    if (domEvent.type === 'click') {\n      _this2.removeSelected(getValuePropValue(item));\n    }\n    var props = _this2.props;\n\n    if (props.autoClearSearchValue) {\n      _this2.setInputValue('', false);\n    }\n  };\n\n  this.onArrowClick = function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (!_this2.props.disabled) {\n      _this2.setOpenState(!_this2.state.open, !_this2.state.open);\n    }\n  };\n\n  this.onPlaceholderClick = function () {\n    if (_this2.getInputDOMNode()) {\n      _this2.getInputDOMNode().focus();\n    }\n  };\n\n  this.onOuterFocus = function (e) {\n    if (_this2.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n    _this2.clearBlurTime();\n    if (!isMultipleOrTagsOrCombobox(_this2.props) && e.target === _this2.getInputDOMNode()) {\n      return;\n    }\n    if (_this2._focused) {\n      return;\n    }\n    _this2._focused = true;\n    _this2.updateFocusClassName();\n    _this2.timeoutFocus();\n  };\n\n  this.onPopupFocus = function () {\n    // fix ie scrollbar, focus element again\n    _this2.maybeFocus(true, true);\n  };\n\n  this.onOuterBlur = function (e) {\n    if (_this2.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n    _this2.blurTimer = setTimeout(function () {\n      _this2._focused = false;\n      _this2.updateFocusClassName();\n      var props = _this2.props;\n      var value = _this2.state.value;\n      var inputValue = _this2.state.inputValue;\n\n      if (isSingleMode(props) && props.showSearch && inputValue && props.defaultActiveFirstOption) {\n        var options = _this2._options || [];\n        if (options.length) {\n          var firstOption = findFirstMenuItem(options);\n          if (firstOption) {\n            value = [getValuePropValue(firstOption)];\n            _this2.fireChange(value);\n          }\n        }\n      } else if (isMultipleOrTags(props) && inputValue) {\n        // why not use setState?\n        _this2.state.inputValue = _this2.getInputDOMNode().value = '';\n\n        value = _this2.getValueByInput(inputValue);\n        if (value !== undefined) {\n          _this2.fireChange(value);\n        }\n      }\n      props.onBlur(_this2.getVLForOnChange(value));\n      _this2.setOpenState(false);\n    }, 10);\n  };\n\n  this.onClearSelection = function (event) {\n    var props = _this2.props;\n    var state = _this2.state;\n    if (props.disabled) {\n      return;\n    }\n    var inputValue = state.inputValue,\n        value = state.value;\n\n    event.stopPropagation();\n    if (inputValue || value.length) {\n      if (value.length) {\n        _this2.fireChange([]);\n      }\n      _this2.setOpenState(false, true);\n      if (inputValue) {\n        _this2.setInputValue('');\n      }\n    }\n  };\n\n  this.onChoiceAnimationLeave = function () {\n    _this2.forcePopupAlign();\n  };\n\n  this.getOptionInfoBySingleValue = function (value, optionsInfo) {\n    var info = void 0;\n    optionsInfo = optionsInfo || _this2.state.optionsInfo;\n    if (optionsInfo[getMapKey(value)]) {\n      info = optionsInfo[getMapKey(value)];\n    }\n    if (info) {\n      return info;\n    }\n    var defaultLabel = value;\n    if (_this2.props.labelInValue) {\n      var label = getLabelFromPropsValue(_this2.props.value, value);\n      if (label !== undefined) {\n        defaultLabel = label;\n      }\n    }\n    var defaultInfo = {\n      option: React.createElement(\n        Option,\n        { value: value, key: value },\n        value\n      ),\n      value: value,\n      label: defaultLabel\n    };\n    return defaultInfo;\n  };\n\n  this.getOptionBySingleValue = function (value) {\n    var _getOptionInfoBySingl = _this2.getOptionInfoBySingleValue(value),\n        option = _getOptionInfoBySingl.option;\n\n    return option;\n  };\n\n  this.getOptionsBySingleValue = function (values) {\n    return values.map(function (value) {\n      return _this2.getOptionBySingleValue(value);\n    });\n  };\n\n  this.getValueByLabel = function (label) {\n    if (label === undefined) {\n      return null;\n    }\n    var value = null;\n    Object.keys(_this2.state.optionsInfo).forEach(function (key) {\n      var info = _this2.state.optionsInfo[key];\n      if (toArray(info.label).join('') === label) {\n        value = info.value;\n      }\n    });\n    return value;\n  };\n\n  this.getVLBySingleValue = function (value) {\n    if (_this2.props.labelInValue) {\n      return {\n        key: value,\n        label: _this2.getLabelBySingleValue(value)\n      };\n    }\n    return value;\n  };\n\n  this.getVLForOnChange = function (vls_) {\n    var vls = vls_;\n    if (vls !== undefined) {\n      if (!_this2.props.labelInValue) {\n        vls = vls.map(function (v) {\n          return v;\n        });\n      } else {\n        vls = vls.map(function (vl) {\n          return {\n            key: vl,\n            label: _this2.getLabelBySingleValue(vl)\n          };\n        });\n      }\n      return isMultipleOrTags(_this2.props) ? vls : vls[0];\n    }\n    return vls;\n  };\n\n  this.getLabelBySingleValue = function (value, optionsInfo) {\n    var _getOptionInfoBySingl2 = _this2.getOptionInfoBySingleValue(value, optionsInfo),\n        label = _getOptionInfoBySingl2.label;\n\n    return label;\n  };\n\n  this.getDropdownContainer = function () {\n    if (!_this2.dropdownContainer) {\n      _this2.dropdownContainer = document.createElement('div');\n      document.body.appendChild(_this2.dropdownContainer);\n    }\n    return _this2.dropdownContainer;\n  };\n\n  this.getPlaceholderElement = function () {\n    var props = _this2.props,\n        state = _this2.state;\n\n    var hidden = false;\n    if (state.inputValue) {\n      hidden = true;\n    }\n    if (state.value.length) {\n      hidden = true;\n    }\n    if (isCombobox(props) && state.value.length === 1 && !state.value[0]) {\n      hidden = false;\n    }\n    var placeholder = props.placeholder;\n    if (placeholder) {\n      return React.createElement(\n        'div',\n        _extends({\n          onMouseDown: preventDefaultEvent,\n          style: _extends({\n            display: hidden ? 'none' : 'block'\n          }, UNSELECTABLE_STYLE)\n        }, UNSELECTABLE_ATTRIBUTE, {\n          onClick: _this2.onPlaceholderClick,\n          className: props.prefixCls + '-selection__placeholder'\n        }),\n        placeholder\n      );\n    }\n    return null;\n  };\n\n  this.getInputElement = function () {\n    var _classnames;\n\n    var props = _this2.props;\n    var inputElement = props.getInputElement ? props.getInputElement() : React.createElement('input', { id: props.id, autoComplete: 'off' });\n    var inputCls = classnames(inputElement.props.className, (_classnames = {}, _classnames[props.prefixCls + '-search__field'] = true, _classnames));\n    // https://github.com/ant-design/ant-design/issues/4992#issuecomment-281542159\n    // Add space to the end of the inputValue as the width measurement tolerance\n    return React.createElement(\n      'div',\n      { className: props.prefixCls + '-search__field__wrap' },\n      React.cloneElement(inputElement, {\n        ref: _this2.saveInputRef,\n        onChange: _this2.onInputChange,\n        onKeyDown: chaining(_this2.onInputKeyDown, inputElement.props.onKeyDown, _this2.props.onInputKeyDown),\n        value: _this2.state.inputValue,\n        disabled: props.disabled,\n        className: inputCls\n      }),\n      React.createElement(\n        'span',\n        {\n          ref: _this2.saveInputMirrorRef,\n          className: props.prefixCls + '-search__field__mirror'\n        },\n        _this2.state.inputValue,\n        '\\xA0'\n      )\n    );\n  };\n\n  this.getInputDOMNode = function () {\n    return _this2.topCtrlRef ? _this2.topCtrlRef.querySelector('input,textarea,div[contentEditable]') : _this2.inputRef;\n  };\n\n  this.getInputMirrorDOMNode = function () {\n    return _this2.inputMirrorRef;\n  };\n\n  this.getPopupDOMNode = function () {\n    return _this2.selectTriggerRef.getPopupDOMNode();\n  };\n\n  this.getPopupMenuComponent = function () {\n    return _this2.selectTriggerRef.getInnerMenu();\n  };\n\n  this.setOpenState = function (open, needFocus) {\n    var props = _this2.props,\n        state = _this2.state;\n\n    if (state.open === open) {\n      _this2.maybeFocus(open, needFocus);\n      return;\n    }\n    var nextState = {\n      open: open,\n      backfillValue: undefined\n    };\n    // clear search input value when open is false in singleMode.\n    if (!open && isSingleMode(props) && props.showSearch) {\n      _this2.setInputValue('', false);\n    }\n    if (!open) {\n      _this2.maybeFocus(open, needFocus);\n    }\n    _this2.setState(nextState, function () {\n      if (open) {\n        _this2.maybeFocus(open, needFocus);\n      }\n    });\n  };\n\n  this.setInputValue = function (inputValue) {\n    var fireSearch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (inputValue !== _this2.state.inputValue) {\n      _this2.setState({\n        inputValue: inputValue\n      }, _this2.forcePopupAlign);\n      if (fireSearch) {\n        _this2.props.onSearch(inputValue);\n      }\n    }\n  };\n\n  this.getValueByInput = function (string) {\n    var _props2 = _this2.props,\n        multiple = _props2.multiple,\n        tokenSeparators = _props2.tokenSeparators;\n\n    var nextValue = _this2.state.value;\n    var hasNewValue = false;\n    splitBySeparators(string, tokenSeparators).forEach(function (label) {\n      var selectedValue = [label];\n      if (multiple) {\n        var value = _this2.getValueByLabel(label);\n        if (value && findIndexInValueBySingleValue(nextValue, value) === -1) {\n          nextValue = nextValue.concat(value);\n          hasNewValue = true;\n          _this2.fireSelect(value);\n        }\n      } else {\n        // tag\n        if (findIndexInValueBySingleValue(nextValue, label) === -1) {\n          nextValue = nextValue.concat(selectedValue);\n          hasNewValue = true;\n          _this2.fireSelect(label);\n        }\n      }\n    });\n    return hasNewValue ? nextValue : undefined;\n  };\n\n  this.getRealOpenState = function () {\n    var open = _this2.state.open;\n    var options = _this2._options || [];\n    if (isMultipleOrTagsOrCombobox(_this2.props) || !_this2.props.showSearch) {\n      if (open && !options.length) {\n        open = false;\n      }\n    }\n    return open;\n  };\n\n  this.handleBackfill = function (item) {\n    if (!_this2.props.backfill || !(isSingleMode(_this2.props) || isCombobox(_this2.props))) {\n      return;\n    }\n\n    var key = getValuePropValue(item);\n\n    if (isCombobox(_this2.props)) {\n      _this2.setInputValue(key, false);\n    }\n\n    _this2.setState({\n      value: [key],\n      backfillValue: key\n    });\n  };\n\n  this.filterOption = function (input, child) {\n    var defaultFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFilterFn;\n    var value = _this2.state.value;\n\n    var lastValue = value[value.length - 1];\n    if (!input || lastValue && lastValue === _this2.state.backfillValue) {\n      return true;\n    }\n    var filterFn = _this2.props.filterOption;\n    if ('filterOption' in _this2.props) {\n      if (_this2.props.filterOption === true) {\n        filterFn = defaultFilter;\n      }\n    } else {\n      filterFn = defaultFilter;\n    }\n\n    if (!filterFn) {\n      return true;\n    } else if (typeof filterFn === 'function') {\n      return filterFn.call(_this2, input, child);\n    } else if (child.props.disabled) {\n      return false;\n    }\n    return true;\n  };\n\n  this.timeoutFocus = function () {\n    if (_this2.focusTimer) {\n      _this2.clearFocusTime();\n    }\n    _this2.focusTimer = setTimeout(function () {\n      _this2.props.onFocus();\n    }, 10);\n  };\n\n  this.clearFocusTime = function () {\n    if (_this2.focusTimer) {\n      clearTimeout(_this2.focusTimer);\n      _this2.focusTimer = null;\n    }\n  };\n\n  this.clearBlurTime = function () {\n    if (_this2.blurTimer) {\n      clearTimeout(_this2.blurTimer);\n      _this2.blurTimer = null;\n    }\n  };\n\n  this.updateFocusClassName = function () {\n    var rootRef = _this2.rootRef,\n        props = _this2.props;\n    // avoid setState and its side effect\n\n    if (_this2._focused) {\n      classes(rootRef).add(props.prefixCls + '-focused');\n    } else {\n      classes(rootRef).remove(props.prefixCls + '-focused');\n    }\n  };\n\n  this.maybeFocus = function (open, needFocus) {\n    if (needFocus || open) {\n      var input = _this2.getInputDOMNode();\n      var _document = document,\n          activeElement = _document.activeElement;\n\n      if (input && (open || isMultipleOrTagsOrCombobox(_this2.props))) {\n        if (activeElement !== input) {\n          input.focus();\n          _this2._focused = true;\n        }\n      } else {\n        if (activeElement !== _this2.selectionRef) {\n          _this2.selectionRef.focus();\n          _this2._focused = true;\n        }\n      }\n    }\n  };\n\n  this.removeSelected = function (selectedKey, e) {\n    var props = _this2.props;\n    if (props.disabled || _this2.isChildDisabled(selectedKey)) {\n      return;\n    }\n\n    // Do not trigger Trigger popup\n    if (e && e.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    var value = _this2.state.value.filter(function (singleValue) {\n      return singleValue !== selectedKey;\n    });\n    var canMultiple = isMultipleOrTags(props);\n\n    if (canMultiple) {\n      var event = selectedKey;\n      if (props.labelInValue) {\n        event = {\n          key: selectedKey,\n          label: _this2.getLabelBySingleValue(selectedKey)\n        };\n      }\n      props.onDeselect(event, _this2.getOptionBySingleValue(selectedKey));\n    }\n    _this2.fireChange(value);\n  };\n\n  this.openIfHasChildren = function () {\n    var props = _this2.props;\n    if (React.Children.count(props.children) || isSingleMode(props)) {\n      _this2.setOpenState(true);\n    }\n  };\n\n  this.fireSelect = function (value) {\n    _this2.props.onSelect(_this2.getVLBySingleValue(value), _this2.getOptionBySingleValue(value));\n  };\n\n  this.fireChange = function (value) {\n    var props = _this2.props;\n    if (!('value' in props)) {\n      _this2.setState({\n        value: value\n      }, _this2.forcePopupAlign);\n    }\n    var vls = _this2.getVLForOnChange(value);\n    var options = _this2.getOptionsBySingleValue(value);\n    props.onChange(vls, isMultipleOrTags(_this2.props) ? options : options[0]);\n  };\n\n  this.isChildDisabled = function (key) {\n    return childrenToArray(_this2.props.children).some(function (child) {\n      var childValue = getValuePropValue(child);\n      return childValue === key && child.props && child.props.disabled;\n    });\n  };\n\n  this.forcePopupAlign = function () {\n    _this2.selectTriggerRef.triggerRef.forcePopupAlign();\n  };\n\n  this.renderFilterOptions = function () {\n    var inputValue = _this2.state.inputValue;\n    var _props3 = _this2.props,\n        children = _props3.children,\n        tags = _props3.tags,\n        filterOption = _props3.filterOption,\n        notFoundContent = _props3.notFoundContent;\n\n    var menuItems = [];\n    var childrenKeys = [];\n    var options = _this2.renderFilterOptionsFromChildren(children, childrenKeys, menuItems);\n    if (tags) {\n      // tags value must be string\n      var value = _this2.state.value;\n      value = value.filter(function (singleValue) {\n        return childrenKeys.indexOf(singleValue) === -1 && (!inputValue || String(singleValue).indexOf(String(inputValue)) > -1);\n      });\n      value.forEach(function (singleValue) {\n        var key = singleValue;\n        var menuItem = React.createElement(\n          MenuItem,\n          {\n            style: UNSELECTABLE_STYLE,\n            role: 'option',\n            attribute: UNSELECTABLE_ATTRIBUTE,\n            value: key,\n            key: key\n          },\n          key\n        );\n        options.push(menuItem);\n        menuItems.push(menuItem);\n      });\n      if (inputValue) {\n        var notFindInputItem = menuItems.every(function (option) {\n          // this.filterOption return true has two meaning,\n          // 1, some one exists after filtering\n          // 2, filterOption is set to false\n          // condition 2 does not mean the option has same value with inputValue\n          var filterFn = function filterFn() {\n            return getValuePropValue(option) === inputValue;\n          };\n          if (filterOption !== false) {\n            return !_this2.filterOption.call(_this2, inputValue, option, filterFn);\n          }\n          return !filterFn();\n        });\n        if (notFindInputItem) {\n          options.unshift(React.createElement(\n            MenuItem,\n            {\n              style: UNSELECTABLE_STYLE,\n              role: 'option',\n              attribute: UNSELECTABLE_ATTRIBUTE,\n              value: inputValue,\n              key: inputValue\n            },\n            inputValue\n          ));\n        }\n      }\n    }\n\n    if (!options.length && notFoundContent) {\n      options = [React.createElement(\n        MenuItem,\n        {\n          style: UNSELECTABLE_STYLE,\n          attribute: UNSELECTABLE_ATTRIBUTE,\n          disabled: true,\n          role: 'option',\n          value: 'NOT_FOUND',\n          key: 'NOT_FOUND'\n        },\n        notFoundContent\n      )];\n    }\n    return options;\n  };\n\n  this.renderFilterOptionsFromChildren = function (children, childrenKeys, menuItems) {\n    var sel = [];\n    var props = _this2.props;\n    var inputValue = _this2.state.inputValue;\n\n    var tags = props.tags;\n    React.Children.forEach(children, function (child) {\n      if (!child) {\n        return;\n      }\n      if (child.type.isSelectOptGroup) {\n        var innerItems = _this2.renderFilterOptionsFromChildren(child.props.children, childrenKeys, menuItems);\n        if (innerItems.length) {\n          var label = child.props.label;\n          var key = child.key;\n          if (!key && typeof label === 'string') {\n            key = label;\n          } else if (!label && key) {\n            label = key;\n          }\n          sel.push(React.createElement(\n            MenuItemGroup,\n            { key: key, title: label },\n            innerItems\n          ));\n        }\n        return;\n      }\n\n      warning(child.type.isSelectOption, 'the children of `Select` should be `Select.Option` or `Select.OptGroup`, ' + ('instead of `' + (child.type.name || child.type.displayName || child.type) + '`.'));\n\n      var childValue = getValuePropValue(child);\n\n      validateOptionValue(childValue, _this2.props);\n\n      if (_this2.filterOption(inputValue, child)) {\n        var menuItem = React.createElement(MenuItem, _extends({\n          style: UNSELECTABLE_STYLE,\n          attribute: UNSELECTABLE_ATTRIBUTE,\n          value: childValue,\n          key: childValue,\n          role: 'option'\n        }, child.props));\n        sel.push(menuItem);\n        menuItems.push(menuItem);\n      }\n\n      if (tags) {\n        childrenKeys.push(childValue);\n      }\n    });\n\n    return sel;\n  };\n\n  this.renderTopControlNode = function () {\n    var _state2 = _this2.state,\n        value = _state2.value,\n        open = _state2.open,\n        inputValue = _state2.inputValue;\n\n    var props = _this2.props;\n    var choiceTransitionName = props.choiceTransitionName,\n        prefixCls = props.prefixCls,\n        maxTagTextLength = props.maxTagTextLength,\n        maxTagCount = props.maxTagCount,\n        maxTagPlaceholder = props.maxTagPlaceholder,\n        showSearch = props.showSearch;\n\n    var className = prefixCls + '-selection__rendered';\n    // search input is inside topControlNode in single, multiple & combobox. 2016/04/13\n    var innerNode = null;\n    if (isSingleMode(props)) {\n      var selectedValue = null;\n      if (value.length) {\n        var showSelectedValue = false;\n        var opacity = 1;\n        if (!showSearch) {\n          showSelectedValue = true;\n        } else {\n          if (open) {\n            showSelectedValue = !inputValue;\n            if (showSelectedValue) {\n              opacity = 0.4;\n            }\n          } else {\n            showSelectedValue = true;\n          }\n        }\n        var singleValue = value[0];\n\n        var _getOptionInfoBySingl3 = _this2.getOptionInfoBySingleValue(singleValue),\n            label = _getOptionInfoBySingl3.label,\n            title = _getOptionInfoBySingl3.title;\n\n        selectedValue = React.createElement(\n          'div',\n          {\n            key: 'value',\n            className: prefixCls + '-selection-selected-value',\n            title: toTitle(title || label),\n            style: {\n              display: showSelectedValue ? 'block' : 'none',\n              opacity: opacity\n            }\n          },\n          label\n        );\n      }\n      if (!showSearch) {\n        innerNode = [selectedValue];\n      } else {\n        innerNode = [selectedValue, React.createElement(\n          'div',\n          {\n            className: prefixCls + '-search ' + prefixCls + '-search--inline',\n            key: 'input',\n            style: {\n              display: open ? 'block' : 'none'\n            }\n          },\n          _this2.getInputElement()\n        )];\n      }\n    } else {\n      var selectedValueNodes = [];\n      var limitedCountValue = value;\n      var maxTagPlaceholderEl = void 0;\n      if (maxTagCount !== undefined && value.length > maxTagCount) {\n        limitedCountValue = limitedCountValue.slice(0, maxTagCount);\n        var omittedValues = _this2.getVLForOnChange(value.slice(maxTagCount, value.length));\n        var content = '+ ' + (value.length - maxTagCount) + ' ...';\n        if (maxTagPlaceholder) {\n          content = typeof maxTagPlaceholder === 'function' ? maxTagPlaceholder(omittedValues) : maxTagPlaceholder;\n        }\n        maxTagPlaceholderEl = React.createElement(\n          'li',\n          _extends({\n            style: UNSELECTABLE_STYLE\n          }, UNSELECTABLE_ATTRIBUTE, {\n            onMouseDown: preventDefaultEvent,\n            className: prefixCls + '-selection__choice ' + prefixCls + '-selection__choice__disabled',\n            key: 'maxTagPlaceholder',\n            title: toTitle(content)\n          }),\n          React.createElement(\n            'div',\n            { className: prefixCls + '-selection__choice__content' },\n            content\n          )\n        );\n      }\n      if (isMultipleOrTags(props)) {\n        selectedValueNodes = limitedCountValue.map(function (singleValue) {\n          var info = _this2.getOptionInfoBySingleValue(singleValue);\n          var content = info.label;\n          var title = info.title || content;\n          if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n            content = content.slice(0, maxTagTextLength) + '...';\n          }\n          var disabled = _this2.isChildDisabled(singleValue);\n          var choiceClassName = disabled ? prefixCls + '-selection__choice ' + prefixCls + '-selection__choice__disabled' : prefixCls + '-selection__choice';\n          return React.createElement(\n            'li',\n            _extends({\n              style: UNSELECTABLE_STYLE\n            }, UNSELECTABLE_ATTRIBUTE, {\n              onMouseDown: preventDefaultEvent,\n              className: choiceClassName,\n              key: singleValue,\n              title: toTitle(title)\n            }),\n            React.createElement(\n              'div',\n              { className: prefixCls + '-selection__choice__content' },\n              content\n            ),\n            disabled ? null : React.createElement('span', {\n              className: prefixCls + '-selection__choice__remove',\n              onClick: function onClick(event) {\n                _this2.removeSelected(singleValue, event);\n              }\n            })\n          );\n        });\n      }\n      if (maxTagPlaceholderEl) {\n        selectedValueNodes.push(maxTagPlaceholderEl);\n      }\n      selectedValueNodes.push(React.createElement(\n        'li',\n        {\n          className: prefixCls + '-search ' + prefixCls + '-search--inline',\n          key: '__input'\n        },\n        _this2.getInputElement()\n      ));\n\n      if (isMultipleOrTags(props) && choiceTransitionName) {\n        innerNode = React.createElement(\n          Animate,\n          {\n            onLeave: _this2.onChoiceAnimationLeave,\n            component: 'ul',\n            transitionName: choiceTransitionName\n          },\n          selectedValueNodes\n        );\n      } else {\n        innerNode = React.createElement(\n          'ul',\n          null,\n          selectedValueNodes\n        );\n      }\n    }\n    return React.createElement(\n      'div',\n      { className: className, ref: _this2.saveTopCtrlRef },\n      _this2.getPlaceholderElement(),\n      innerNode\n    );\n  };\n};\n\nSelect.displayName = 'Select';\n\npolyfill(Select);\n\nexport default Select;","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\n\nvar OptGroup = function (_React$Component) {\n  _inherits(OptGroup, _React$Component);\n\n  function OptGroup() {\n    _classCallCheck(this, OptGroup);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  return OptGroup;\n}(React.Component);\n\nOptGroup.isSelectOptGroup = true;\nexport default OptGroup;","import Select from './Select';\nimport Option from './Option';\nimport { SelectPropTypes } from './PropTypes';\nimport OptGroup from './OptGroup';\nSelect.Option = Option;\nSelect.OptGroup = OptGroup;\nexport { Option, OptGroup, SelectPropTypes };\nexport default Select;","import '@babel/polyfill';\nimport styled from 'styled-components';\n\n// The Button from the last section without the interpolations\nexport const ColoredText = styled.div`\n    @keyframes text-gradient {\n        to {\n            background-position: -300% center;\n        }\n    }\n    font-weight: bold;\n    color: #1890ff;\n    display: inline-block;\n    text-decoration: none;\n    background-image: linear-gradient(to right, #1890ff 25%, #c4ce35 50%, #ac24e2 75%, #1890ff 100%);\n    background-size: 300% auto;\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    animation: text-gradient 16s ease-in-out infinite;\n`;\n\nexport const Logo = ColoredText.extend`\n    text-align: center;\n    font-size: 19px;\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nexport default function DefaultHeader() {\n    return (\n        <Helmet\n            key=\"helmet\"\n            title=\"Aida\"\n            meta={[\n                { name: 'description', content: 'Build amazing conversational experiences' },\n                {\n                    content:\n                        'aida, chatito, chatbots, ai chatbots, nlu, nlp, natural language processing, tensorflowjs, keras, named entity recognition, text classification',\n                    name: 'keywords'\n                }\n            ]}\n        >\n            <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n            <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n            <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n            <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n            <link rel=\"manifest\" href=\"/site.webmanifest\" />\n            <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\n            <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n            <meta name=\"theme-color\" content=\"#fcfcfc\" />\n        </Helmet>\n    );\n}\n","import '@babel/polyfill';\nimport { Icon, Layout, Menu } from 'antd';\nimport Link from 'gatsby-link';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Logo } from './Logo';\n\nconst { Header, Content, Footer } = Layout;\n\nconst demoRouteRE = /^\\/demo(\\/.*)?$/i;\nconst trainRouteRE = /^\\/train(\\/.*)?$/i;\n\nconst StyledContent = styled(Content)`\n    > p {\n        text-align: justify;\n    }\n    background: #fcfcfc;\n    padding: 48px 48px 48px 72px;\n    min-height: 280px;\n`;\n\nexport default class MainLayout extends React.Component<any, {}> {\n    public render() {\n        let defaultSelectedKeys = '0';\n        if (demoRouteRE.test(this.props.location.pathname)) {\n            defaultSelectedKeys = '0';\n        } else if (trainRouteRE.test(this.props.location.pathname)) {\n            defaultSelectedKeys = '1';\n        }\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Header style={{ background: '#fcfcfc', padding: 0, display: 'flex' }}>\n                    <Logo style={{ textAlign: 'right', width: 200, paddingLeft: 24, paddingRight: 24 }}>\n                        <Link to=\"/\" href=\"/\">\n                            {`< Aida />`}\n                        </Link>\n                    </Logo>\n                    <div style={{ flex: 1 }} />\n                    <div style={{ padding: '0 48px 0 24px', display: 'inline-block', textAlign: 'right', float: 'right' }}>\n                        <a href=\"https://github.com/rodrigopivi/aida\" title=\"Aida\" style={{ fontSize: 26 }}>\n                            <Icon type=\"github\" />\n                        </a>\n                    </div>\n                </Header>\n                <Layout style={{ flexDirection: 'row' }}>\n                    <Layout.Sider width={200} breakpoint=\"lg\" collapsedWidth=\"0\" theme=\"light\" style={{ backgroundColor: '#fcfcfc' }}>\n                        <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[defaultSelectedKeys]} style={{ background: '#fcfcfc' }}>\n                            <Menu.Item key=\"0\">\n                                <Link to=\"/demo\" href=\"/demo\">\n                                    <Icon type=\"right-circle-o\" />\n                                    Demo\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"1\">\n                                <Link to=\"/train\" href=\"/train\">\n                                    <Icon type=\"right-circle-o\" />\n                                    Train your own\n                                </Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Layout.Sider>\n                    <Layout style={{ padding: '24px 0 0 24px' }}>\n                        <StyledContent>{this.props.children}</StyledContent>\n                        <Footer style={{ textAlign: 'center' }}>Aida © 2018 Rodrigo Pimentel</Footer>\n                    </Layout>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import * as tf from '@tensorflow/tfjs';\nimport englishTokenizer from '../../languages/en/EnglishTokenizer';\nimport spanishTokenizer from '../../languages/es/SpanishTokenizer';\nimport * as types from '../../types';\nimport { EmbeddingsModel } from './embeddings/EmbeddingsModel';\nimport ClassificationModel from './models/classification';\nimport NerModel from './models/ner';\n\nfunction getTokenizer(language: 'en' | 'es') {\n    const lang = language ? language.toLowerCase() : language;\n    if (lang === 'en') {\n        return englishTokenizer;\n    } else if (lang === 'es') {\n        return spanishTokenizer;\n    }\n    throw new Error(\"Invalid config language. Only 'en' and 'es' are supported.\");\n}\n\nconst defaultPipelineDefinition: types.IPipelineDefinition = {\n    config: {\n        classification: {\n            epochs: 3,\n            filterSizes: [2, 4, 8],\n            lowConfidenceThreshold: 0.3,\n            numFilters: 128\n        },\n        default: {\n            batchSize: 120,\n            drop: 0.5,\n            embeddingDimensions: 300,\n            lossThresholdToStopTraining: 0,\n            maxNgrams: 20,\n            trainingValidationSplit: 0.3\n        },\n        ner: {\n            epochs: 3,\n            lowConfidenceThreshold: 0.2,\n            maxCharsPerWord: 20,\n            numFilters: [256, 128]\n        }\n    }\n};\n\nexport class AidaPipeline {\n    private pipelineDefinition: types.IPipelineDefinition = defaultPipelineDefinition;\n    private datasetParams: types.IDatasetParams;\n    private embeddingsModel: EmbeddingsModel;\n    private classificationModel: ClassificationModel;\n    private nerModel: NerModel;\n    private logger: types.IPipelineModelLogger;\n    private tokenizer: types.IAidaTokenizer;\n\n    constructor(cfg: {\n        dictionary: types.IPretrainedDictionary;\n        datasetParams: types.IDatasetParams;\n        logger: types.IPipelineModelLogger;\n        trainStatsHandler?: types.ITrainStatsHandler;\n        pipelineDefinition?: types.IPipelineDefinition;\n        pretrainedClassifier?: tf.Model;\n        pretrainedNer?: tf.Model;\n    }) {\n        if (cfg.pipelineDefinition) {\n            this.pipelineDefinition = cfg.pipelineDefinition;\n        }\n        this.datasetParams = cfg.datasetParams;\n        this.logger = cfg.logger;\n        this.tokenizer = getTokenizer(this.datasetParams.language);\n        this.embeddingsModel = new EmbeddingsModel(\n            cfg.dictionary,\n            this.pipelineDefinition.config.ner.maxCharsPerWord,\n            cfg.datasetParams.maxWordsPerSentence,\n            this.pipelineDefinition.config.default.maxNgrams,\n            this.pipelineDefinition.config.default.embeddingDimensions,\n            this.tokenizer\n        );\n        const classificationCfg = Object.assign({}, this.pipelineDefinition.config.default, this.pipelineDefinition.config.classification);\n        let classificationTrainStatsHandler;\n        let nerTrainStatsHandler;\n        if (cfg.trainStatsHandler) {\n            classificationTrainStatsHandler = cfg.trainStatsHandler.classification;\n            nerTrainStatsHandler = cfg.trainStatsHandler.ner;\n        }\n        this.classificationModel = new ClassificationModel(\n            classificationCfg,\n            this.datasetParams,\n            this.embeddingsModel,\n            this.logger,\n            cfg.pretrainedClassifier,\n            classificationTrainStatsHandler\n        );\n        const nerCfg = Object.assign({}, this.pipelineDefinition.config.default, this.pipelineDefinition.config.ner);\n        this.nerModel = new NerModel(\n            nerCfg,\n            this.datasetParams,\n            this.embeddingsModel,\n            this.logger,\n            cfg.pretrainedNer,\n            nerTrainStatsHandler\n        );\n    }\n\n    public train = async (trainDataset: types.ITrainingParams): Promise<void> => {\n        this.logger.log('START TRAINING PIPELINE MODELS!');\n        this.logger.log('==================================================================================================');\n        await this.classificationModel.train(trainDataset);\n        await this.nerModel.train(trainDataset);\n        this.logger.log('FINISHED TRAINING PIPELINE MODELS!');\n        this.logger.log('==================================================================================================');\n    };\n\n    public test = async (testDataset: types.ITestingParams) => {\n        this.logger.log('START TESTING PIPELINE MODELS!');\n        this.logger.log('==================================================================================================');\n        const classificationStats = await this.classificationModel.test(testDataset);\n        const nerStats = await this.nerModel.test(testDataset);\n        return { classificationStats, nerStats };\n    };\n\n    public predict = (sentences: string[]) => {\n        const classification = this.classificationModel.predict(sentences);\n        const ner = this.nerModel.predict(sentences, classification);\n        return { classification, ner };\n    };\n\n    public save = async (cfg: { classificationPath: string; nerPath: string }) => {\n        this.logger.log('SAVING PIPELINE MODELS!');\n        this.logger.log('==================================================================================================');\n        const cm = this.classificationModel.tfModel();\n        const nm = this.nerModel.tfModel();\n        await cm.save(cfg.classificationPath);\n        await nm.save(cfg.nerPath);\n    };\n}\n","import { IAidaTokenizer } from '../../types';\n\n// TODO: use fancier tokenizer, better split of words, better joining of sentences\nclass EnglishTokenizer implements IAidaTokenizer {\n    // list of valid characters used for the dictionary, any word with a char that is not listed here will be skip\n    public FILTER_CHARS_REGEXP = /[^a-z0-9\\.,\\?\\'\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~ ]/gi;\n    // list of charaters that act as word splitters (includes space)\n    public WORD_SEPARATORS_REGEXP = /([\\ \\.\\,\\%\\*\\-\\=\\+\\;\\|\\`\\~])/g;\n    // regexp that detect if a word contains non alphanumeric characters\n    public NON_ALPHANUMERIC_REGEXP = /[^a-z0-9]/gi;\n    // when ngram is unkown, replace it with this string listed at the dictionary\n    public UNKNOWN_NGRAM_KEY = '__';\n    // fastText doesn't contain numbers, so we use the sane embeddings for the number words\n    public NUMBERS_MAP: { [key: string]: string } = {\n        // tslint:disable:object-literal-sort-keys\n        zero: '0',\n        one: '1',\n        two: '2',\n        three: '3',\n        four: '4',\n        five: '5',\n        six: '6',\n        seven: '7',\n        eight: '8',\n        nine: '9'\n        // tslint:enable:object-literal-sort-keys\n    };\n\n    public sanitizeSentence = (sentence: string): string => {\n        return sentence\n            .trim()\n            .toLowerCase()\n            .replace(this.FILTER_CHARS_REGEXP, '');\n    };\n\n    public splitSentenceToWords = (sentence: string): string[] => {\n        return this.sanitizeSentence(sentence)\n            .split(this.WORD_SEPARATORS_REGEXP)\n            .map(w => w.trim())\n            .filter(w => !!w);\n    };\n\n    public splitWordToBiGrams = (word: string): string[] => {\n        const ngram = 2;\n        const grams: string[] = [];\n        let index = word.length - ngram + 1;\n        if (index < 1) {\n            return grams;\n        }\n        while (index--) {\n            grams[index] = word.substr(index, ngram);\n        }\n        return grams;\n    };\n    public joinWordsToSentence = (words: string[]): string => words.join(' ');\n}\nexport default new EnglishTokenizer();\n","import { IAidaTokenizer } from '../../types';\n\n// TODO: use fancier tokenizer, better split of words, better joining of sentences\nclass SpanishTokenizer implements IAidaTokenizer {\n    // list of valid characters used for the dictionary, any word with a char that is not listed here will be skip\n    public FILTER_CHARS_REGEXP = /[^aábcdeéfghijklmnñoópqrstuúüvwxyzAÁBCDEÉFGHIJKLMNÑOÓPQRSTUÚÜVWXYZ 0-9\\.,\\?\\'\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~]/g;\n    // list of charaters that act as word splitters (includes space)\n    public WORD_SEPARATORS_REGEXP = /([\\ \\.\\,\\%\\*\\-\\=\\+\\;\\|\\`\\~])/g;\n    // regexp that detect if a word contains non alphanumeric characters\n    public NON_ALPHANUMERIC_REGEXP = /[^aábcdeéfghijklmnñoópqrstuúüvwxyzAÁBCDEÉFGHIJKLMNÑOÓPQRSTUÚÜVWXYZ0-9]/g;\n    // when ngram is unkown, replace it with this string listed at the dictionary\n    public UNKNOWN_NGRAM_KEY = '__';\n    // fastText doesn't contain numbers, so we use the sane embeddings for the number words\n    public NUMBERS_MAP: { [key: string]: string } = {\n        // tslint:disable:object-literal-sort-keys\n        cero: '0',\n        uno: '1',\n        dos: '2',\n        tres: '3',\n        cuatro: '4',\n        cinco: '5',\n        seis: '6',\n        siete: '7',\n        ocho: '8',\n        nueve: '9'\n        // tslint:enable:object-literal-sort-keys\n    };\n\n    public sanitizeSentence = (sentence: string): string => {\n        return sentence\n            .trim()\n            .toLowerCase()\n            .replace(this.FILTER_CHARS_REGEXP, '');\n    };\n\n    public splitSentenceToWords = (sentence: string): string[] => {\n        return this.sanitizeSentence(sentence)\n            .split(this.WORD_SEPARATORS_REGEXP)\n            .map(w => w.trim())\n            .filter(w => !!w);\n    };\n\n    public splitWordToBiGrams = (word: string): string[] => {\n        const ngram = 3;\n        const grams: string[] = [];\n        let index = word.length - ngram + 1;\n        if (index < 1) {\n            return grams;\n        }\n        while (index--) {\n            grams[index] = word.substr(index, ngram);\n        }\n        return grams;\n    };\n\n    public joinWordsToSentence = (words: string[]): string => words.join(' ');\n}\n\nexport default new SpanishTokenizer();\n","import * as tf from '@tensorflow/tfjs';\nimport * as types from '../../../types';\nimport { CombineNgramsLayer } from './CombineNgramsLayer';\nimport { PreSavedEmbeddingsInitializer } from './PreSavedEmbeddingsInitializer';\n\nexport class EmbeddingsModel {\n    public static setupModel(dict: types.IPretrainedDictionary, maxWords: number, maxNgrams: number, embeddingDimensions: number) {\n        const model = tf.sequential();\n        const embedLayer = tf.layers.embedding({\n            embeddingsInitializer: new PreSavedEmbeddingsInitializer({\n                dict: dict.PRETRAINED,\n                embeddingDimensions,\n                maxNgrams,\n                maxWords\n            }),\n            inputDim: dict.PRETRAINED.size,\n            inputLength: [maxNgrams],\n            maskZero: true,\n            outputDim: embeddingDimensions,\n            trainable: false\n        });\n        model.add(tf.layers.timeDistributed({ layer: embedLayer, inputShape: [maxWords, maxNgrams] }));\n        model.add(new CombineNgramsLayer({}));\n        return model;\n    }\n\n    public tokenizer: types.IAidaTokenizer;\n\n    private dict: types.IPretrainedDictionary;\n    private maxCharsPerWord: number;\n    private maxWords: number;\n    private maxNgrams: number;\n    private embeddingDimensions: number;\n    private model: tf.Model;\n\n    constructor(\n        dict: types.IPretrainedDictionary,\n        maxCharsPerWord: number,\n        maxWords: number,\n        maxNgrams: number,\n        embeddingDimensions: number,\n        tokenizer: types.IAidaTokenizer\n    ) {\n        this.dict = dict;\n        this.maxCharsPerWord = maxCharsPerWord;\n        this.maxWords = maxWords;\n        this.maxNgrams = maxNgrams;\n        this.embeddingDimensions = embeddingDimensions;\n        this.model = EmbeddingsModel.setupModel(this.dict, this.maxWords, this.maxNgrams, this.embeddingDimensions);\n        this.tokenizer = tokenizer;\n    }\n\n    public embed = (sentences: string[]) => {\n        return tf.tidy(() => {\n            const maxWords = this.maxWords;\n            const maxNgrams = this.maxNgrams;\n            const input = tf.layers.input({ shape: [maxWords, maxNgrams], dtype: 'int32' });\n            const embedded = this.model.apply(input) as tf.SymbolicTensor;\n            const entryModel = tf.model({ inputs: input, outputs: embedded });\n            const sentencesTensor = this.sentencesToWordIds(sentences);\n            const output = entryModel.predictOnBatch(sentencesTensor) as tf.Tensor<tf.Rank.R3>;\n            sentencesTensor.dispose();\n            return output;\n        });\n    };\n\n    public dictionary = () => this.dict;\n\n    public sentencesToCharacterVectors = (sentences: string[]): tf.Tensor<tf.Rank.R3> => {\n        return tf.tidy(() => {\n            const WORDS_TO_VECTORS_MAP = this.dict.PRETRAINED;\n            const sentencesSplittedByWords = sentences.map(s => this.tokenizer.splitSentenceToWords(s));\n            const buffer: tf.TensorBuffer<tf.Rank.R3> = tf.buffer(\n                [sentences.length, this.maxWords, this.maxCharsPerWord * this.embeddingDimensions],\n                'float32'\n            );\n            sentencesSplittedByWords.forEach((s, sentenceIndex) => {\n                s.forEach((w: string, widx: number) => {\n                    w.split('').forEach((letter, lidx) => {\n                        let vec = WORDS_TO_VECTORS_MAP.get(letter);\n                        if (!vec) {\n                            vec = WORDS_TO_VECTORS_MAP.get(this.tokenizer.UNKNOWN_NGRAM_KEY);\n                        }\n                        if (!vec) {\n                            return;\n                        }\n                        vec.forEach((x: number, i: number) => {\n                            buffer.set(x, sentenceIndex, widx, lidx * this.embeddingDimensions + i);\n                        });\n                    });\n                });\n            });\n            return buffer.toTensor();\n        });\n    };\n\n    private sentencesToWordIds = (sentences: string[]) => {\n        return tf.tidy(() => {\n            const sentencesSplittedByWords = sentences.map(s => this.tokenizer.splitSentenceToWords(s));\n            const buffer = tf.buffer([sentences.length, this.maxWords, this.maxNgrams], 'int32') as tf.TensorBuffer<tf.Rank.R3>;\n            sentencesSplittedByWords.forEach((s, sentenceIndex) => {\n                s.forEach((w: string, wordIndex: number) => {\n                    if (this.dict.WORD_TO_ID_MAP[w] !== undefined) {\n                        // use the word dictionary\n                        buffer.set(this.dict.WORD_TO_ID_MAP[w], sentenceIndex, wordIndex, 0);\n                    } else if (w.length) {\n                        this.generateWordIdsFromNGrams(w).forEach((gram, gramIndex) => {\n                            if (gramIndex > this.maxNgrams) {\n                                // tslint:disable-next-line:no-console\n                                console.warn('Word exceeding max n grams per word: ', w);\n                                return;\n                            }\n                            buffer.set(gram, sentenceIndex, wordIndex, gramIndex);\n                        });\n                    }\n                });\n            });\n            return buffer.toTensor();\n        });\n    };\n\n    private generateWordIdsFromNGrams = (word: string): number[] => {\n        let vecIds: number[] = [];\n        const addToVecsIfNotUndefined = (k: string) => {\n            if (this.dict.WORD_TO_ID_MAP[k] === undefined) {\n                return false;\n            }\n            vecIds.push(this.dict.WORD_TO_ID_MAP[k]);\n            return true;\n        };\n        // first try using ngrams to reconstruct the word vector\n        if (word.length > 2) {\n            let allNgramsFound = true;\n            const wordNgrams = this.tokenizer.splitWordToBiGrams(word);\n            wordNgrams.forEach(wt => {\n                if (!addToVecsIfNotUndefined(wt) && allNgramsFound) {\n                    allNgramsFound = false;\n                }\n            });\n            if (allNgramsFound) {\n                return vecIds;\n            }\n        }\n        // if not by ngrams use characters to construct the word vector\n        vecIds = [];\n        // TODO: use characters to construct ngrams, not the word\n        word.split('').forEach(addToVecsIfNotUndefined);\n        return vecIds;\n    };\n}\n","import * as tf from '@tensorflow/tfjs';\nimport { l2Normalize } from '@tensorflow/tfjs-layers/dist/losses';\n\n// given an imput composed of max_ngrams x 300d this layer will sum\n// and normalize all the max_ngrams to get a unique 300d vector representation\nexport class CombineNgramsLayer extends tf.layers.Layer {\n    // The output shape removes the ngram dimension\n    public computeOutputShape(inputShape: number[]) {\n        return [inputShape[0], inputShape[1], inputShape[inputShape.length - 1]];\n    }\n    public call(inputs: tf.Tensor, kwargs: any) {\n        return tf.tidy(() => {\n            this.invokeCallHook(inputs, kwargs);\n            const combined = tf.sum(inputs, 2);\n            const output = l2Normalize(combined, 2);\n            combined.dispose();\n            return output;\n        });\n    }\n    public getClassName() {\n        return 'CombineNgramsLayer';\n    }\n}\n","import * as tf from '@tensorflow/tfjs';\nimport * as initializers from '@tensorflow/tfjs-layers/dist/initializers';\nimport { flatMapDeep } from 'lodash';\n\nexport interface IEmbeddingsModelConfig {\n    dict: Map<string, Float32Array>;\n    maxWords: number;\n    maxNgrams: number;\n    embeddingDimensions: number;\n}\n\nexport class PreSavedEmbeddingsInitializer extends initializers.Initializer {\n    public static className = 'PreSavedEmbeddingsInitializer';\n    public config: IEmbeddingsModelConfig;\n    public className = PreSavedEmbeddingsInitializer.className;\n    constructor(config: IEmbeddingsModelConfig) {\n        super();\n        this.config = config;\n    }\n    public apply(shape: tf.Shape): tf.Tensor {\n        return tf.tidy(() => {\n            const flatMat = flatMapDeep([...this.config.dict.values()]);\n            return tf.tensor2d(flatMat, [this.config.dict.size, this.config.embeddingDimensions], 'float32');\n        });\n    }\n\n    public getConfig() {\n        return this.config.dict as any;\n    }\n}\ntf.serialization.SerializationMap.register(PreSavedEmbeddingsInitializer);\n","import * as tf from '@tensorflow/tfjs';\nimport { chunk } from 'lodash';\nimport * as types from '../../../types';\nimport { EmbeddingsModel } from '../embeddings/EmbeddingsModel';\n\nexport default class ClassificationModel extends types.PipelineModel implements types.IPipelineModel {\n    private static setup(\n        config: types.IClassificationModelParams & types.IDefaultModelParams,\n        { maxWordsPerSentence: maxWords, intents }: types.IDatasetParams\n    ) {\n        const numClasses = intents.length;\n        const LEARNING_RATE = 0.0066; // use 1e-4 as default as alternative starting point\n        const ADAM_BETA_1 = 0.0025;\n        const ADAM_BETA_2 = 0.1;\n        const optimizer = tf.train.adam(LEARNING_RATE, ADAM_BETA_1, ADAM_BETA_2);\n        // Layer 1: Convolution + max pool\n        const input = tf.input({ dtype: 'float32', shape: [maxWords, config.embeddingDimensions] });\n        const convLayer1 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: config.numFilters,\n                inputShape: [maxWords, config.embeddingDimensions],\n                kernelInitializer: 'randomNormal',\n                kernelSize: [config.filterSizes[0]],\n                padding: 'valid'\n            })\n            .apply(input);\n        const maxpool1 = tf.layers\n            .maxPooling1d({\n                padding: 'valid',\n                poolSize: maxWords - config.filterSizes[0] + 1\n            })\n            .apply(convLayer1) as tf.SymbolicTensor;\n        // Layer 2: Convolution + max pool\n        const convLayer2 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: config.numFilters,\n                inputShape: [maxWords, config.embeddingDimensions],\n                kernelInitializer: 'randomNormal',\n                kernelSize: [config.filterSizes[1]],\n                padding: 'valid'\n            })\n            .apply(input);\n        const maxpool2 = tf.layers\n            .maxPooling1d({\n                padding: 'valid',\n                poolSize: maxWords - config.filterSizes[1] + 1\n            })\n            .apply(convLayer2) as tf.SymbolicTensor;\n        // Layer 3: Convolution + max pool\n        const convLayer3 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: config.numFilters,\n                inputShape: [maxWords, config.embeddingDimensions],\n                kernelInitializer: 'randomNormal',\n                kernelSize: [config.filterSizes[2]],\n                padding: 'valid'\n            })\n            .apply(input);\n        const maxpool3 = tf.layers\n            .maxPooling1d({\n                padding: 'valid',\n                poolSize: maxWords - config.filterSizes[2] + 1\n            })\n            .apply(convLayer3) as tf.SymbolicTensor;\n        // Concatenation of all CNN layers on different levels and apply a fully connected dense layer\n        const concatLayer = tf.layers.concatenate({ axis: 1 }).apply([maxpool1, maxpool2, maxpool3]);\n        const flat = tf.layers.flatten().apply(concatLayer);\n        const dropOut = tf.layers.dropout({ rate: config.drop }).apply(flat) as tf.SymbolicTensor;\n        const flatPool1 = tf.layers.flatten().apply(maxpool1) as tf.SymbolicTensor;\n        const concatForClassification = tf.layers.concatenate({ axis: 1 }).apply([dropOut, flatPool1]);\n        const outClassification = tf.layers\n            .dense({\n                activation: 'softmax',\n                units: numClasses\n            })\n            .apply(concatForClassification) as tf.SymbolicTensor;\n        const model = tf.model({ inputs: input, outputs: outClassification });\n        model.compile({\n            loss: 'categoricalCrossentropy',\n            metrics: ['accuracy'],\n            optimizer\n        });\n        return model;\n    }\n\n    private config: types.IClassificationModelParams & types.IDefaultModelParams;\n    private datasetParams: types.IDatasetParams;\n    private model: tf.Model;\n    private embeddingsModel: EmbeddingsModel;\n    private logger: types.IPipelineModelLogger;\n    private classificationTrainStatsHandler: types.ITrainStatsHandler['classification'] | undefined;\n    constructor(\n        config: types.IClassificationModelParams & types.IDefaultModelParams,\n        datasetParams: types.IDatasetParams,\n        embeddingsModel: EmbeddingsModel,\n        logger: types.IPipelineModelLogger,\n        pretrainedModel?: tf.Model,\n        classificationTrainStatsHandler?: types.ITrainStatsHandler['classification']\n    ) {\n        super();\n        this.config = config;\n        this.datasetParams = datasetParams;\n        this.embeddingsModel = embeddingsModel;\n        this.model = pretrainedModel ? pretrainedModel : ClassificationModel.setup(this.config, this.datasetParams);\n        this.logger = logger;\n        this.classificationTrainStatsHandler = classificationTrainStatsHandler;\n    }\n\n    public tfModel = () => this.model;\n\n    public predict = (sentences: string[]): types.IClassificationPred[] => {\n        const prediction = [] as types.IClassificationPred[];\n        tf.tidy(() => {\n            const embeddedSentences = this.embeddingsModel.embed(sentences);\n            const output = this.model.predict(embeddedSentences) as tf.Tensor<tf.Rank>;\n            const d = output.dataSync() as Float32Array;\n            output.dispose();\n            embeddedSentences.dispose();\n            const intents = this.datasetParams.intents;\n            sentences.forEach((s, i) => {\n                const preds = d.slice(i * intents.length, i * intents.length + intents.length);\n                const sentencePreds: types.IClassificationPred[] = [];\n                preds.forEach((p, idx) =>\n                    sentencePreds.push({\n                        confidence: p,\n                        intent: intents[idx],\n                        sentence: s\n                    })\n                );\n                sentencePreds.sort((a: any, b: any) => (a.confidence > b.confidence ? 0 : 1));\n                prediction.push(sentencePreds[0]);\n            });\n        });\n        return prediction;\n    };\n\n    public train = async (trainDataset: types.ITrainingParams): Promise<void> => {\n        const trainYChunks = chunk(trainDataset.trainY, this.config.batchSize);\n        const trainXChunks = chunk(trainDataset.trainX, this.config.batchSize);\n        this.logger.log('Start training classification model!');\n        const m = this.model;\n        let enoughAccuracyReached = false;\n        for (const [index, xChunk] of trainXChunks.entries()) {\n            if (enoughAccuracyReached) {\n                return;\n            }\n            const embeddedSentences = this.embeddingsModel.embed(xChunk);\n            const dataLabels = tf.tensor1d(trainYChunks[index], 'int32');\n            const hotEncodedLabels = tf.oneHot(dataLabels, this.datasetParams.intents.length);\n            await m.fit(embeddedSentences, hotEncodedLabels, {\n                batchSize: this.config.batchSize,\n                callbacks: { onBatchEnd: tf.nextFrame },\n                epochs: this.config.epochs,\n                shuffle: true,\n                validationSplit: this.config.trainingValidationSplit\n            });\n            dataLabels.dispose();\n            embeddedSentences.dispose();\n            hotEncodedLabels.dispose();\n            const h = m.history.history;\n            const c = h.val_loss.length - 1;\n            if (this.classificationTrainStatsHandler) {\n                this.classificationTrainStatsHandler({\n                    batch: index + 1,\n                    batchEpochs: m.history.epoch.length,\n                    currentBatchSize: trainXChunks[index].length,\n                    tensorsInMemory: tf.memory().numTensors,\n                    totalBatches: trainXChunks.length,\n                    trainingAccuracy: h.acc[c],\n                    trainingLoss: h.loss[c],\n                    validationAccuracy: h.val_acc[c],\n                    validationLoss: h.val_loss[c]\n                });\n            }\n            this.logger.log(`Trained ${m.history.epoch.length} epochs on batch ${index + 1} of ${trainXChunks.length}`);\n            this.logger.log(`Training Loss: ${h.loss[c]} | Training Accuracy: ${h.acc[c]}`);\n            this.logger.log(`Validation Loss: ${h.val_loss[c]} | Validation Accuracy: ${h.val_acc[c]}`);\n            this.logger.warn(`(Memory) Number of tensors in memory at the end of batch: ${tf.memory().numTensors}`);\n            this.logger.log('==================================================================================================');\n            if (\n                this.config.lossThresholdToStopTraining &&\n                h.loss[c] < this.config.lossThresholdToStopTraining &&\n                h.val_loss[c] < this.config.lossThresholdToStopTraining\n            ) {\n                enoughAccuracyReached = true;\n                this.logger.warn(`Enough accuracy reached! Ending training after batch ${index + 1} of ${trainXChunks.length}`);\n                this.logger.log('==================================================================================================');\n            }\n        }\n    };\n\n    public test = async (\n        testExamples: types.ITestingParams,\n        resultsHandler?: types.ITestPredictionsHandler\n    ): Promise<types.IPredictionStats> => {\n        const handler = resultsHandler ? resultsHandler : this.defaultResultsLogger;\n        const stats: types.IPredictionStats = { correct: 0, wrong: 0, lowConfidence: 0 };\n        const x = chunk(testExamples.testX, 100);\n        const y = chunk(testExamples.testY, 100);\n        for (const [i, sentences] of x.entries()) {\n            const predictions = this.predict(sentences);\n            handler(sentences, y[i], predictions, stats);\n        }\n        return stats;\n    };\n\n    private defaultResultsLogger = (\n        x: types.ITestingParams['testX'],\n        y: types.ITestingParams['testY'],\n        o: types.IClassificationPred[],\n        stats: types.IPredictionStats\n    ): types.IPredictionStats => {\n        x.forEach((s, i) => {\n            const intent = this.datasetParams.intents[y[i]];\n            const correct = o[i].intent === intent;\n            if (o[i].confidence < this.config.lowConfidenceThreshold) {\n                if (stats.lowConfidence === undefined) {\n                    return;\n                }\n                stats.lowConfidence++;\n                this.logger.warn(`LOW CONFIDENCE (intent: ${o[i].intent}, confidence: ${o[i].confidence}) - ${s}`);\n            } else if (correct) {\n                stats.correct++;\n                this.logger.debug(`CORRECT (intent: ${o[i].intent}, confidence: ${o[i].confidence}) - ${s}`);\n            } else {\n                stats.wrong++;\n                this.logger.error(`WRONG (intent: ${o[i].intent}, confidence: ${o[i].confidence}) - ${s}`);\n            }\n        });\n        return stats;\n    };\n}\n","import * as tf from '@tensorflow/tfjs';\nimport { chunk, flatMapDeep } from 'lodash';\nimport * as types from '../../../types';\nimport { EmbeddingsModel } from '../embeddings/EmbeddingsModel';\n\nexport default class NerModel extends types.PipelineModel implements types.IPipelineModel {\n    private static setup(config: types.INerModelParams & types.IDefaultModelParams, datasetParams: types.IDatasetParams) {\n        const maxWords = datasetParams.maxWordsPerSentence;\n        const { drop, embeddingDimensions, maxCharsPerWord, numFilters } = config;\n        const numSlotTypes = Object.keys(datasetParams.slotsToId).length;\n        const LEARNING_RATE = 0.0066; // use 1e-4 as default as alternative starting point\n        const ADAM_BETA_1 = 0.0025;\n        const ADAM_BETA_2 = 0.1;\n        const optimizer = tf.train.adam(LEARNING_RATE, ADAM_BETA_1, ADAM_BETA_2);\n        const classLabelInput = tf.input({ dtype: 'float32', shape: [datasetParams.intents.length] });\n        const classLabelRepeated = tf.layers.repeatVector({ n: maxWords }).apply(classLabelInput) as tf.SymbolicTensor;\n\n        // WORD LEVEL EMBEDDINGS\n        const embeddedSentencesInput = tf.input({ dtype: 'float32', shape: [maxWords, embeddingDimensions] });\n        const convLayer1 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: numFilters[0],\n                inputShape: [maxWords, embeddingDimensions],\n                kernelInitializer: 'randomNormal',\n                kernelSize: 1,\n                padding: 'valid'\n            })\n            .apply(embeddedSentencesInput) as tf.SymbolicTensor;\n        const convLayer2 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: numFilters[0],\n                kernelInitializer: 'randomNormal',\n                kernelSize: 1,\n                padding: 'valid'\n            })\n            .apply(convLayer1) as tf.SymbolicTensor;\n        // CHARACTER LEVEL EMBEDDINGS\n        const embeddedCharactersInput = tf.input({\n            dtype: 'float32',\n            shape: [maxWords, maxCharsPerWord * embeddingDimensions]\n        });\n        const convCLayer1 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: numFilters[1],\n                inputShape: [maxWords, maxCharsPerWord * embeddingDimensions],\n                kernelInitializer: 'randomNormal',\n                kernelSize: 1,\n                padding: 'valid'\n            })\n            .apply(embeddedCharactersInput) as tf.SymbolicTensor;\n        const dropOutC1 = tf.layers.dropout({ rate: drop }).apply(convCLayer1) as tf.SymbolicTensor;\n        const convCLayer2 = tf.layers\n            .conv1d({\n                activation: 'relu',\n                filters: numFilters[1],\n                kernelInitializer: 'randomNormal',\n                kernelSize: 1,\n                padding: 'valid'\n            })\n            .apply(dropOutC1) as tf.SymbolicTensor;\n        // CONCATENATE BOTH CNN ENCODERS (WORD AND CHAR) WITH THE INPUT AND THE CHAR CNN LAYER 1\n        const concated = tf.layers.concatenate().apply([classLabelRepeated, embeddedSentencesInput, convLayer2, convCLayer2]);\n        const biLstm = tf.layers\n            .bidirectional({\n                layer: tf.layers.lstm({ units: maxWords, returnSequences: true }) as tf.RNN,\n                mergeMode: 'concat'\n            })\n            .apply(concated) as tf.SymbolicTensor;\n\n        const outputs = tf.layers\n            .dense({\n                activation: 'softmax',\n                units: numSlotTypes\n            })\n            .apply(biLstm) as tf.SymbolicTensor;\n        const model = tf.model({ inputs: [classLabelInput, embeddedSentencesInput, embeddedCharactersInput], outputs });\n        model.compile({ loss: 'categoricalCrossentropy', metrics: ['accuracy'], optimizer });\n        return model;\n    }\n\n    private config: types.INerModelParams & types.IDefaultModelParams;\n    private datasetParams: types.IDatasetParams;\n    private model: tf.Model;\n    private embeddingsModel: EmbeddingsModel;\n    private logger: types.IPipelineModelLogger;\n    private nerTrainStatsHandler: types.ITrainStatsHandler['ner'] | undefined;\n\n    constructor(\n        config: types.INerModelParams & types.IDefaultModelParams,\n        datasetParams: types.IDatasetParams,\n        embeddingsModel: EmbeddingsModel,\n        logger: types.IPipelineModelLogger,\n        pretrainedModel?: tf.Model,\n        nerTrainStatsHandler?: types.ITrainStatsHandler['ner']\n    ) {\n        super();\n        this.config = config;\n        this.datasetParams = datasetParams;\n        this.embeddingsModel = embeddingsModel;\n        this.model = pretrainedModel ? pretrainedModel : NerModel.setup(this.config, this.datasetParams);\n        this.logger = logger;\n        this.nerTrainStatsHandler = nerTrainStatsHandler;\n    }\n\n    public tfModel = () => this.model;\n\n    public rawPrediction = (sentences: string[], classificationPred: types.IClassificationPred[]) => {\n        return tf.tidy(() => {\n            const { maxWordsPerSentence: maxWords, slotsToId } = this.datasetParams;\n            const slotTypesLength = Object.keys(slotsToId).length;\n            const embeddedSentences = this.embeddingsModel.embed(sentences);\n            const embeddedCharacters = this.embeddingsModel.sentencesToCharacterVectors(sentences);\n            const encodedIntent = classificationPred.map(p => {\n                const intentEncoded = new Array(this.datasetParams.intents.length).fill(0) as number[];\n                const idx = this.datasetParams.intents.indexOf(p.intent);\n                if (idx !== -1) {\n                    intentEncoded[idx] = 1;\n                }\n                return intentEncoded;\n            });\n            const intentsFlat = flatMapDeep(encodedIntent);\n            const classLabel = tf.tensor2d(intentsFlat, [encodedIntent.length, this.datasetParams.intents.length]);\n            const output = this.model.predict([classLabel, embeddedSentences, embeddedCharacters]) as tf.Tensor<tf.Rank>;\n            const flattenedPredictions = output.dataSync() as Float32Array;\n            output.dispose();\n            classLabel.dispose();\n            embeddedSentences.dispose();\n            embeddedCharacters.dispose();\n            // word predictions for each sentence in the form [sentence, word, slots scores]\n            const chunks = chunk(flattenedPredictions, maxWords * slotTypesLength).map(sp => chunk(sp, slotTypesLength));\n            return chunks.map(sentencePreds => {\n                return sentencePreds.map(wordTagPredictions => {\n                    let highestIndex = 0;\n                    let confidence = wordTagPredictions.length ? wordTagPredictions[highestIndex] : 0;\n                    wordTagPredictions.forEach((tp, ti) => {\n                        if (wordTagPredictions[highestIndex] < tp) {\n                            highestIndex = ti;\n                            confidence = tp;\n                        }\n                    });\n                    return { highestIndex, confidence };\n                });\n            });\n        });\n    };\n\n    public predict = (sentences: string[], classificationPred: types.IClassificationPred[]) => {\n        const { lowConfidenceThreshold } = this.config;\n        const { slotsToId } = this.datasetParams;\n        const wordPredictionsChunk = this.rawPrediction(sentences, classificationPred);\n        return sentences.map((s, i) => {\n            const sentenceWordPredictionIds = wordPredictionsChunk[i];\n            const sentenceWords = this.embeddingsModel.tokenizer.splitSentenceToWords(s);\n            return sentenceWords.reduce(\n                (accumulator: types.ISlotReducer, w: string, currentIndex) => {\n                    if (accumulator.current && accumulator.current.confidence === 0) {\n                        accumulator.current.confidence = sentenceWordPredictionIds[currentIndex].confidence;\n                    }\n                    const currentSlotKey = Object.keys(slotsToId).find(\n                        slotKey =>\n                            sentenceWordPredictionIds[currentIndex] &&\n                            slotsToId[slotKey] === sentenceWordPredictionIds[currentIndex].highestIndex\n                    );\n                    if (!currentSlotKey || !accumulator.current) {\n                        return accumulator;\n                    }\n                    if (accumulator.current.key !== currentSlotKey) {\n                        if (\n                            accumulator.current.key &&\n                            accumulator.current.key !== 'O' &&\n                            accumulator.current.confidence >= lowConfidenceThreshold\n                        ) {\n                            if (!accumulator.slots[accumulator.current.key]) {\n                                accumulator.slots[accumulator.current.key] = [];\n                            }\n                            accumulator.slots[accumulator.current.key].push({\n                                confidence: accumulator.current.confidence,\n                                value: accumulator.current.value\n                            });\n                        }\n                        accumulator.current = {\n                            confidence: sentenceWordPredictionIds[currentIndex].confidence,\n                            key: currentSlotKey,\n                            value: w\n                        };\n                    } else {\n                        // todo: add a join words handler for languages that tokenize differently\n                        accumulator.current.value += ` ${w}`;\n                        accumulator.current.confidence =\n                            (sentenceWordPredictionIds[currentIndex].confidence + accumulator.current.confidence) / 2;\n                    }\n                    if (currentIndex + 1 === sentenceWords.length) {\n                        if (accumulator.current.key !== 'O' && accumulator.current.confidence >= lowConfidenceThreshold) {\n                            if (!accumulator.slots[accumulator.current.key]) {\n                                accumulator.slots[accumulator.current.key] = [];\n                            }\n                            accumulator.slots[accumulator.current.key].push({\n                                confidence: accumulator.current.confidence,\n                                value: accumulator.current.value\n                            });\n                        }\n                        return { sentence: s, slots: accumulator.slots };\n                    }\n                    return accumulator;\n                },\n                { current: { key: '', value: '', confidence: 0 }, slots: {}, sentence: '' }\n            );\n        });\n    };\n\n    public train = async (trainDataset: types.ITrainingParams) => {\n        const trainY2Chunks = chunk(trainDataset.trainY2, this.config.batchSize);\n        const trainYChunks = chunk(trainDataset.trainY, this.config.batchSize);\n        const trainXChunks = chunk(trainDataset.trainX, this.config.batchSize);\n        const { epochs, trainingValidationSplit: validationSplit } = this.config;\n        const slotsLength = Object.keys(this.datasetParams.slotsToId).length;\n        this.logger.log('Start training NER model!');\n        let enoughAccuracyReached = false;\n        for (const [index, xChunk] of trainXChunks.entries()) {\n            if (enoughAccuracyReached) {\n                return;\n            }\n            // classification hot encoded labels as input\n            const intentLabels = tf.tidy(() =>\n                tf.oneHot(tf.tensor1d(trainYChunks[index], 'int32'), this.datasetParams.intents.length).asType('float32')\n            );\n            const embeddedSentenceWords = this.embeddingsModel.embed(xChunk);\n            const embeddedSentenceWordChars = this.embeddingsModel.sentencesToCharacterVectors(xChunk);\n            // convert sentence-word-slots from the highest index format like [0,0,0,0,4,4,0,0,3,3] for a sentence\n            // to one hot encoded sentences with correct maxWords and batch sizes tensor sizes\n            const slotTags: tf.Tensor3D = tf.tidy(() => {\n                const y2sentences: tf.Tensor2D[] = [];\n                for (const wordsSlotId of trainY2Chunks[index]) {\n                    const slotIds = tf\n                        .tensor1d(wordsSlotId, 'int32')\n                        .pad([[0, this.datasetParams.maxWordsPerSentence - wordsSlotId.length]]);\n                    const ohe = tf.oneHot(slotIds, slotsLength).asType('float32');\n                    slotIds.dispose();\n                    y2sentences.push(ohe);\n                }\n                const stack = tf.stack(y2sentences) as tf.Tensor3D;\n                y2sentences.forEach(s => s.dispose());\n                return stack;\n            });\n            await this.model.fit([intentLabels, embeddedSentenceWords, embeddedSentenceWordChars], slotTags, {\n                callbacks: { onBatchEnd: tf.nextFrame },\n                epochs,\n                shuffle: true,\n                validationSplit\n            });\n            intentLabels.dispose();\n            embeddedSentenceWords.dispose();\n            embeddedSentenceWordChars.dispose();\n            await tf.nextFrame();\n            const h = this.model.history.history;\n            const c = h.val_loss.length - 1;\n            const epoch = this.model.history.epoch;\n            if (this.nerTrainStatsHandler) {\n                this.nerTrainStatsHandler({\n                    batch: index + 1,\n                    batchEpochs: epoch.length,\n                    currentBatchSize: trainXChunks[index].length,\n                    tensorsInMemory: tf.memory().numTensors,\n                    totalBatches: trainXChunks.length,\n                    trainingAccuracy: h.acc[c],\n                    trainingLoss: h.loss[c],\n                    validationAccuracy: h.val_acc[c],\n                    validationLoss: h.val_loss[c]\n                });\n            }\n            this.logger.log(`Trained ${epoch.length} epochs on batch ${index + 1} of ${trainXChunks.length}`);\n            this.logger.log(`Training Loss: ${h.loss[c]} | Training Accuracy: ${h.acc[c]}`);\n            this.logger.log(`Validation Loss: ${h.val_loss[c]} | Validation Accuracy: ${h.val_acc[c]}`);\n            this.logger.warn(`(Memory) Number of tensors in memory at the end of batch: ${tf.memory().numTensors}`);\n            this.logger.log('==================================================================================================');\n            slotTags.dispose();\n            if (\n                this.config.lossThresholdToStopTraining &&\n                h.loss[c] < this.config.lossThresholdToStopTraining &&\n                h.val_loss[c] < this.config.lossThresholdToStopTraining\n            ) {\n                enoughAccuracyReached = true;\n                this.logger.warn(`Enough accuracy reached! Ending training after batch ${index + 1} of ${trainXChunks.length}`);\n                this.logger.log('==================================================================================================');\n            }\n        }\n    };\n\n    public test = async (\n        testExamples: types.ITestingParams,\n        resultsHandler?: types.ITestPredictionsHandler\n    ): Promise<types.IPredictionStats> => {\n        const handler = resultsHandler ? resultsHandler : this.defaultResultsLogger;\n        const stats: types.IPredictionStats = { correct: 0, wrong: 0 };\n        const testX = chunk(testExamples.testX, 100);\n        const testY = chunk(testExamples.testY, 100);\n        const testY2 = chunk(testExamples.testY2, 100);\n        for (const [i, sentences] of testX.entries()) {\n            const classifications = testY[i];\n            const encodedIntent = sentences.map(\n                (p, idx) =>\n                    ({\n                        confidence: 1,\n                        intent: this.datasetParams.intents[classifications[idx]],\n                        sentence: p\n                    } as types.IClassificationPred)\n            );\n            const predictions = this.rawPrediction(sentences, encodedIntent).map(sentence => sentence.map(s => s.highestIndex));\n            handler(sentences, testY2[i], predictions, stats);\n            await tf.nextFrame();\n        }\n        return stats;\n    };\n\n    private defaultResultsLogger = (\n        x: types.ITestingParams['testX'],\n        y2: types.ITestingParams['testY2'],\n        o: types.ITestingParams['testY2'],\n        stats: types.IPredictionStats\n    ): types.IPredictionStats => {\n        x.forEach((s, sentenceIdx) => {\n            const expectedTags = y2[sentenceIdx];\n            const predictedTags = o[sentenceIdx];\n            let correct = true;\n            expectedTags.forEach((tag, idx) => {\n                if (predictedTags[idx] !== tag && correct) {\n                    correct = false;\n                }\n            });\n            if (correct) {\n                stats.correct++;\n                this.logger.debug(`CORRECT - ${s} expected: ${expectedTags}, predicted: ${predictedTags}`);\n            } else {\n                stats.wrong++;\n                this.logger.error(`WRONG - ${s} expected: ${expectedTags}, predicted: ${predictedTags}`);\n            }\n        });\n        return stats;\n    };\n}\n","import { IDefaultDataset } from 'chatito/dist/adapters/web';\nimport { flatten, shuffle } from 'lodash';\nimport { IAidaPipelineConfig, IAidaTokenizer, IDictionariesFromDataset, IDictJsonItem, IPretrainedDictionary } from '../types';\n\n/// Build an object that contains the max words size, the train x, y and the intents\nexport function dictionariesFromDataset(\n    data: IDefaultDataset,\n    tokenizer: IAidaTokenizer,\n    language: 'en' | 'es',\n    maxIntentExamplesForTraining: IAidaPipelineConfig['dataset']['maxIntentExamplesForTraining']\n) {\n    const ret: IDictionariesFromDataset = {\n        intents: Object.keys(data),\n        intentsWithSlots: [],\n        language,\n        maxWordsPerSentence: 0,\n        slotsToId: { O: 0 },\n        testX: [],\n        testY: [],\n        testY2: [],\n        trainX: [],\n        trainY: [],\n        trainY2: []\n    };\n    const intentTrainingStats: number[] = new Array(ret.intents.length).fill(0);\n    const intentTestingStats: number[] = new Array(ret.intents.length).fill(0);\n    let processedSentences: any[] = [];\n    const intentsWithSlotsSet = new Set();\n    ret.intents.forEach(intent => {\n        let containsSlots = false;\n        const intentProcessedSentences = data[intent].map(sentenceTokens => {\n            const y2Tags: number[][] = sentenceTokens.map(token => {\n                const words = tokenizer.splitSentenceToWords(token.value);\n                const encodedSentenceFrag: number[] = new Array(words.length).fill(0);\n                const slotName = token.slot;\n                if (slotName) {\n                    intentsWithSlotsSet.add(intent);\n                    if (!containsSlots) {\n                        containsSlots = true;\n                    }\n                    const internalKey = slotName;\n                    if (ret.slotsToId[internalKey] === undefined) {\n                        ret.slotsToId[internalKey] = Object.keys(ret.slotsToId).length;\n                    }\n                    words.forEach((w, i) => {\n                        encodedSentenceFrag[i] = ret.slotsToId[internalKey];\n                    });\n                }\n                return encodedSentenceFrag;\n            });\n            const tagsForSentence = flatten(y2Tags);\n            const sentence = sentenceTokens.map(d => d.value).join('');\n            const sentenceWords = tokenizer.splitSentenceToWords(sentence);\n            if (ret.maxWordsPerSentence < sentenceWords.length) {\n                ret.maxWordsPerSentence = sentenceWords.length;\n            }\n            const intentId = ret.intents.findIndex(k => k === intent);\n            return { sentence, intentId, tagsForSentence };\n        });\n        processedSentences = processedSentences.concat(intentProcessedSentences);\n    });\n    ret.intentsWithSlots = [...intentsWithSlotsSet];\n    shuffle(processedSentences).forEach(s => {\n        const intentKey = ret.intents[s.intentId];\n        const maxTrainingExamplesForIntent = maxIntentExamplesForTraining[intentKey] || maxIntentExamplesForTraining.default;\n        if (intentTrainingStats[s.intentId] >= maxTrainingExamplesForIntent) {\n            intentTestingStats[s.intentId]++;\n            ret.testX.push(s.sentence);\n            ret.testY.push(s.intentId);\n            ret.testY2.push(s.tagsForSentence);\n        } else {\n            intentTrainingStats[s.intentId]++;\n            ret.trainX.push(s.sentence);\n            ret.trainY.push(s.intentId);\n            ret.trainY2.push(s.tagsForSentence);\n        }\n    });\n    const stats = ret.intents.map((intentKey, index) => ({\n        intent: intentKey,\n        testing: intentTestingStats[index],\n        training: intentTrainingStats[index]\n    }));\n    return { dictionary: ret, stats };\n}\n\nexport function buildDictionary(dictJson: IDictJsonItem[]): IPretrainedDictionary {\n    const dictionaryCache = {\n        ID_TO_WORD_MAP: {},\n        PRETRAINED: new Map(), // the actual pretrained word to vectors map\n        WORD_TO_ID_MAP: {}\n    } as IPretrainedDictionary;\n    dictionaryCache.PRETRAINED = new Map(dictJson);\n    [...dictionaryCache.PRETRAINED.keys()].forEach((word, id) => {\n        dictionaryCache.ID_TO_WORD_MAP[id] = word;\n        dictionaryCache.WORD_TO_ID_MAP[word] = id;\n    });\n    return dictionaryCache;\n}\n","import { Card, Col, Input, Row } from 'antd';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { AidaPipeline } from '../../src/pipelines/zebraWings/pipeline';\n\ninterface IPipelineTestInputProps {\n    pipeline: AidaPipeline;\n}\ninterface IPipelineTestInputState {\n    disabled: boolean;\n    outTextContent: string | null;\n}\n// ant bug: patch input styling of search text input to avoid being hidden by the button\nconst SearchInput = styled(Input.Search)`\n    > input {\n        padding-right: 70px !important;\n    }\n`;\nexport default class TrainedPipelineTestInput extends React.Component<IPipelineTestInputProps, IPipelineTestInputState> {\n    public state: IPipelineTestInputState = {\n        disabled: false,\n        outTextContent: null\n    };\n    public renderIntentsList = () => (\n        <div>\n            <p>The pipeline was trained on this list of intents and slots per intent:</p>\n            <div>\n                <ul>\n                    <li>greet</li>\n                    <li>bye</li>\n                    <li>affirmative</li>\n                    <li>negative</li>\n                    <li>wtf (detect insults and out of context stuff)</li>\n                    <li>playMusic -> slots: artist, song</li>\n                    <li>addEventToCalendar -> slots: calendarEvent, dateTime</li>\n                </ul>\n            </div>\n            <p>\n                You can try a sentence like 'add to my calendar that tomorrow 9am i have to go to the dentist' or 'play new york new york\n                from frank sinatra'\n            </p>\n            <p>\n                Check the{' '}\n                <a target=\"_blank\" href=\"https://github.com/rodrigopivi/aida/tree/master/typescript/intents\">\n                    chatito definition files at the github repo\n                </a>\n                &nbsp; for more details about the training examples generation.\n            </p>\n        </div>\n    );\n\n    public render() {\n        return (\n            <div>\n                <Row type=\"flex\" justify=\"center\">\n                    <Col span={12}>\n                        <Card title=\"Test trained pipeline:\" style={{ minHeight: '100%' }}>\n                            <p>\n                                <SearchInput\n                                    placeholder=\"Enter some input to process...\"\n                                    enterButton=\"Send\"\n                                    size=\"large\"\n                                    onSearch={this.handleSubmit}\n                                    id=\"__inputSearch\"\n                                    disabled={this.state.disabled}\n                                />\n                            </p>\n                            {this.renderIntentsList()}\n                        </Card>\n                    </Col>\n                    <Col span={12}>\n                        <Card title=\"Pipeline output:\" style={{ minHeight: '100%' }}>\n                            <pre style={{ marginTop: '2em' }}>{this.state.outTextContent || ''}</pre>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    private predict = (sentences: string) => {\n        const predictions = this.props.pipeline.predict([sentences]);\n        return Object.assign({}, predictions.classification[0], predictions.ner[0]);\n    };\n\n    private handleSubmit = (value: string) => {\n        if (!value || !value.trim()) {\n            return null;\n        }\n        this.setState({ disabled: true }, () => {\n            const outTextContent = JSON.stringify(this.predict(value), null, 2);\n            this.setState({ outTextContent }, () => {\n                this.setState({ disabled: false });\n                const inputSearch = document.getElementById('__inputSearch') as HTMLInputElement;\n                if (inputSearch && inputSearch.value) {\n                    inputSearch.value = '';\n                }\n            });\n        });\n    };\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _en_US = require('rc-calendar/lib/locale/en_US');\n\nvar _en_US2 = _interopRequireDefault(_en_US);\n\nvar _en_US3 = require('../../time-picker/locale/en_US');\n\nvar _en_US4 = _interopRequireDefault(_en_US3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// Merge into a locale object\nvar locale = {\n    lang: (0, _extends3['default'])({ placeholder: 'Select date', rangePlaceholder: ['Start date', 'End date'] }, _en_US2['default']),\n    timePickerLocale: (0, _extends3['default'])({}, _en_US4['default'])\n};\n// All settings at:\n// https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json\nexports['default'] = locale;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar locale = {\n    placeholder: 'Select time'\n};\nexports['default'] = locale;\nmodule.exports = exports['default'];","import * as tf from '@tensorflow/tfjs';\nimport { Button, Card, Col, Progress, Row, Select } from 'antd';\nimport axios from 'axios';\nimport { withPrefix } from 'gatsby-link';\nimport * as React from 'react';\nimport { AidaPipeline } from '../../src/pipelines/zebraWings/pipeline';\nimport * as types from '../../src/types';\nimport { buildDictionary } from '../../src/utils/dictionaryUtils';\nimport TrainedPipelineTestInput from './TrainedPipelineTestInput';\n\ninterface ILoadPreTrainedExample {\n    downloadProgress: number;\n    isDownloading: boolean;\n    modelsLoaded: boolean;\n    selectedModel: 'web' | 'node' | 'keras';\n}\nexport default class LoadPreTrainedExample extends React.Component<{}, ILoadPreTrainedExample> {\n    public state: ILoadPreTrainedExample = {\n        downloadProgress: 0,\n        isDownloading: false,\n        modelsLoaded: false,\n        selectedModel: 'web'\n    };\n    private pipeline: AidaPipeline | null = null;\n    private logger: types.IPipelineModelLogger = {\n        // tslint:disable:no-console\n        debug: () => null,\n        error: console.error,\n        log: console.log,\n        warn: console.warn\n        // tslint:enable:no-console\n    };\n\n    public componentWillUnmount() {\n        // tslint:disable-next-line:no-console\n        console.log(tf.memory());\n        tf.disposeVariables();\n        (window as any).tf = tf;\n    }\n\n    public render() {\n        if (this.state.modelsLoaded && this.pipeline) {\n            return <TrainedPipelineTestInput pipeline={this.pipeline} />;\n        }\n        const disableDownload = this.state.isDownloading || this.state.downloadProgress === 100;\n        const buttonMessage = disableDownload\n            ? this.state.downloadProgress === 100\n                ? 'Loading Models...'\n                : 'Downloading...'\n            : 'Start demo';\n        return (\n            <Row type=\"flex\">\n                <Col span={12} style={{ textAlign: 'justify' }}>\n                    <h1>Build conversational user experiences</h1>\n                    <h3>Aida is a library that helps you build conversational user experiences with this concepts in mind:</h3>\n                    <ul>\n                        <li>\n                            <strong>Universal application:</strong> The trained models should be able to run anywhere, that is why the\n                            models have two mirror implementations: in{' '}\n                            <a href=\"https://js.tensorflow.com/\" target=\"_blank\">\n                                TensorflowJS\n                            </a>{' '}\n                            to be able to train and run from browsers or nodejs, and in{' '}\n                            <a href=\"https://keras.io/\" target=\"_blank\">\n                                Keras\n                            </a>{' '}\n                            to run in python and export to mobile devices (CoreML for iOS and TensorFlow for Android).\n                        </li>\n                        <li>\n                            <strong>Offline support:</strong> It should be able to train and make predictions without connectivty, no need\n                            to have a server-side api, although the trained models can also run server-side behind an api if desired.\n                        </li>\n                        <li>\n                            <strong>Low memory consumption:</strong> Having small file size and memory consumption is very important if we\n                            want to run from browsers. Most NLU models use huge dictionaries (several gigabytes size) like word2vec, to\n                            solve this problem, we are only using pre-trained{' '}\n                            <a href=\"https://fasttext.cc/\" target=\"_blank\">\n                                fastText\n                            </a>{' '}\n                            bigram and unigram embeddings, this keeps the dictionary very small, fast to download.\n                        </li>\n                        <li>\n                            <strong>Accurate:</strong> Carefully crafted, close to state of the art neural network models for text\n                            classification and named entity recognition, the models will only get better as the field progresses and the\n                            community expands.\n                        </li>\n                        <li>\n                            <strong>Easy to use:</strong> Getting started by creating a dataset and training couldn't be easier thanks to{' '}\n                            <a href=\"https://rodrigopivi.github.io/Chatito\" target=\"_blank\">\n                                Chatito\n                            </a>\n                            , you can create a large dataset in minutes, and start training without any setup, just from the browser.\n                        </li>\n                    </ul>\n                    <p>Click 'start demo' to continue.</p>\n                </Col>\n                <Col span={12}>\n                    <Card style={{ marginLeft: '2em', textAlign: 'center' }}>\n                        <div>\n                            <Progress type=\"circle\" percent={this.state.downloadProgress} />\n                        </div>\n                        <div style={{ marginTop: '1em', marginBottom: '1em' }}>\n                            <Select\n                                defaultValue={this.state.selectedModel}\n                                style={{ width: 280 }}\n                                onChange={v => this.setState({ selectedModel: v as 'web' | 'node' | 'keras' })}\n                            >\n                                <Select.Option value=\"web\">Load models trained using tf.js web</Select.Option>\n                                <Select.Option value=\"node\">Load models trained using tf.js node</Select.Option>\n                                <Select.Option value=\"keras\">Load models trained using keras</Select.Option>\n                            </Select>\n                        </div>\n                        <div>\n                            <Button type=\"primary\" size=\"large\" disabled={disableDownload} onClick={this.loadSavedModels}>\n                                {buttonMessage}\n                            </Button>\n                        </div>\n                        <br />\n                        <p>Will download the trained model (about 3mb compressed)</p>\n                    </Card>\n                </Col>\n            </Row>\n        );\n    }\n\n    private downloadsTrainedModel = async (backend: 'web' | 'node' | 'keras') => {\n        const modelsUrls = {\n            keras: {\n                classification: withPrefix('/models/pretrained/keras/classification/model.json'),\n                ner: withPrefix('/models/pretrained/keras/ner/model.json')\n            },\n            node: {\n                classification: withPrefix('/models/pretrained/node/classification/model.json'),\n                ner: withPrefix('/models/pretrained/node/ner/model.json')\n            },\n            web: {\n                classification: withPrefix('/models/pretrained/web/classification.json'),\n                ner: withPrefix('/models/pretrained/web/ner.json')\n            }\n        };\n        const pretrainedClassifier = await tf.loadModel(modelsUrls[backend].classification);\n        const pretrainedNer = await tf.loadModel(modelsUrls[backend].ner);\n        return { pretrainedClassifier, pretrainedNer };\n    };\n\n    private loadSavedModels = async () => {\n        const files = [withPrefix('/models/dictionary.json'), withPrefix('/models/dataset_params.json')];\n        const jsonFiles = await this.downloadFiles(files);\n        const embeddingDictionaryJson = jsonFiles[0].data;\n        const datasetParams = jsonFiles[1].data;\n        const { pretrainedClassifier, pretrainedNer } = await this.downloadsTrainedModel(this.state.selectedModel);\n        const dictionary = buildDictionary(embeddingDictionaryJson);\n        const logger = this.logger;\n        const pipeline = new AidaPipeline({ datasetParams, dictionary, logger, pretrainedClassifier, pretrainedNer });\n        this.pipeline = pipeline;\n        this.setState({ modelsLoaded: true });\n        return pipeline;\n    };\n\n    private downloadFiles = async (files: string[]) => {\n        let total = 0;\n        let progress = 0;\n        this.setState({ isDownloading: true, downloadProgress: 0 });\n        const downloads = await Promise.all(\n            files.map(file =>\n                axios.get(file, {\n                    onDownloadProgress: progressEvent => {\n                        const totalLength = progressEvent.lengthComputable\n                            ? progressEvent.total\n                            : progressEvent.target.getResponseHeader('content-length') ||\n                              progressEvent.target.getResponseHeader('x-decompressed-content-length');\n                        if (totalLength !== null) {\n                            total += totalLength;\n                            progress += Math.round((progressEvent.loaded * 100) / total);\n                        }\n                        this.setState({ downloadProgress: progress });\n                    }\n                })\n            )\n        );\n        this.setState({ isDownloading: false, downloadProgress: 100 });\n        return downloads;\n    };\n}\n","'use strict';\n\nrequire('../../style/index.css');\n\nrequire('./index.css');\n\nrequire('../../input/style/css');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _rcSelect = require('rc-select');\n\nvar _rcSelect2 = _interopRequireDefault(_rcSelect);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _LocaleReceiver = require('../locale-provider/LocaleReceiver');\n\nvar _LocaleReceiver2 = _interopRequireDefault(_LocaleReceiver);\n\nvar _default = require('../locale-provider/default');\n\nvar _default2 = _interopRequireDefault(_default);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\n\nvar SelectPropTypes = {\n    prefixCls: _propTypes2['default'].string,\n    className: _propTypes2['default'].string,\n    size: _propTypes2['default'].oneOf(['default', 'large', 'small']),\n    notFoundContent: _propTypes2['default'].any,\n    showSearch: _propTypes2['default'].bool,\n    optionLabelProp: _propTypes2['default'].string,\n    transitionName: _propTypes2['default'].string,\n    choiceTransitionName: _propTypes2['default'].string,\n    id: _propTypes2['default'].string\n};\n// => It is needless to export the declaration of below two inner components.\n// export { Option, OptGroup };\n\nvar Select = function (_React$Component) {\n    (0, _inherits3['default'])(Select, _React$Component);\n\n    function Select(props) {\n        (0, _classCallCheck3['default'])(this, Select);\n\n        var _this = (0, _possibleConstructorReturn3['default'])(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));\n\n        _this.saveSelect = function (node) {\n            _this.rcSelect = node;\n        };\n        _this.renderSelect = function (locale) {\n            var _classNames;\n\n            var _a = _this.props,\n                prefixCls = _a.prefixCls,\n                _a$className = _a.className,\n                className = _a$className === undefined ? '' : _a$className,\n                size = _a.size,\n                mode = _a.mode,\n                restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"mode\"]);\n            var cls = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-lg', size === 'large'), (0, _defineProperty3['default'])(_classNames, prefixCls + '-sm', size === 'small'), _classNames), className);\n            var optionLabelProp = _this.props.optionLabelProp;\n\n            if (_this.isCombobox()) {\n                // children 带 dom 结构时，无法填入输入框\n                optionLabelProp = optionLabelProp || 'value';\n            }\n            var modeConfig = {\n                multiple: mode === 'multiple',\n                tags: mode === 'tags',\n                combobox: _this.isCombobox()\n            };\n            return React.createElement(_rcSelect2['default'], (0, _extends3['default'])({}, restProps, modeConfig, { prefixCls: prefixCls, className: cls, optionLabelProp: optionLabelProp || 'children', notFoundContent: _this.getNotFoundContent(locale), ref: _this.saveSelect }));\n        };\n        (0, _warning2['default'])(props.mode !== 'combobox', 'The combobox mode of Select is deprecated,' + 'it will be removed in next major version,' + 'please use AutoComplete instead');\n        return _this;\n    }\n\n    (0, _createClass3['default'])(Select, [{\n        key: 'focus',\n        value: function focus() {\n            this.rcSelect.focus();\n        }\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.rcSelect.blur();\n        }\n    }, {\n        key: 'getNotFoundContent',\n        value: function getNotFoundContent(locale) {\n            var notFoundContent = this.props.notFoundContent;\n\n            if (this.isCombobox()) {\n                // AutoComplete don't have notFoundContent defaultly\n                return notFoundContent === undefined ? null : notFoundContent;\n            }\n            return notFoundContent === undefined ? locale.notFoundContent : notFoundContent;\n        }\n    }, {\n        key: 'isCombobox',\n        value: function isCombobox() {\n            var mode = this.props.mode;\n\n            return mode === 'combobox' || mode === Select.SECRET_COMBOBOX_MODE_DO_NOT_USE;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                _LocaleReceiver2['default'],\n                { componentName: 'Select', defaultLocale: _default2['default'].Select },\n                this.renderSelect\n            );\n        }\n    }]);\n    return Select;\n}(React.Component);\n\nexports['default'] = Select;\n\nSelect.Option = _rcSelect.Option;\nSelect.OptGroup = _rcSelect.OptGroup;\nSelect.SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nSelect.defaultProps = {\n    prefixCls: 'ant-select',\n    showSearch: false,\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom'\n};\nSelect.propTypes = SelectPropTypes;\nmodule.exports = exports['default'];","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar LocaleReceiver = function (_React$Component) {\n    (0, _inherits3['default'])(LocaleReceiver, _React$Component);\n\n    function LocaleReceiver() {\n        (0, _classCallCheck3['default'])(this, LocaleReceiver);\n        return (0, _possibleConstructorReturn3['default'])(this, (LocaleReceiver.__proto__ || Object.getPrototypeOf(LocaleReceiver)).apply(this, arguments));\n    }\n\n    (0, _createClass3['default'])(LocaleReceiver, [{\n        key: 'getLocale',\n        value: function getLocale() {\n            var _props = this.props,\n                componentName = _props.componentName,\n                defaultLocale = _props.defaultLocale;\n            var antLocale = this.context.antLocale;\n\n            var localeFromContext = antLocale && antLocale[componentName];\n            return (0, _extends3['default'])({}, typeof defaultLocale === 'function' ? defaultLocale() : defaultLocale, localeFromContext || {});\n        }\n    }, {\n        key: 'getLocaleCode',\n        value: function getLocaleCode() {\n            var antLocale = this.context.antLocale;\n\n            var localeCode = antLocale && antLocale.locale;\n            // Had use LocaleProvide but didn't set locale\n            if (antLocale && antLocale.exist && !localeCode) {\n                return 'en-us';\n            }\n            return localeCode;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return this.props.children(this.getLocale(), this.getLocaleCode());\n        }\n    }]);\n    return LocaleReceiver;\n}(React.Component);\n\nexports['default'] = LocaleReceiver;\n\nLocaleReceiver.contextTypes = {\n    antLocale: _propTypes2['default'].object\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _en_US = require('rc-pagination/lib/locale/en_US');\n\nvar _en_US2 = _interopRequireDefault(_en_US);\n\nvar _en_US3 = require('../date-picker/locale/en_US');\n\nvar _en_US4 = _interopRequireDefault(_en_US3);\n\nvar _en_US5 = require('../time-picker/locale/en_US');\n\nvar _en_US6 = _interopRequireDefault(_en_US5);\n\nvar _en_US7 = require('../calendar/locale/en_US');\n\nvar _en_US8 = _interopRequireDefault(_en_US7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nexports['default'] = {\n    locale: 'en',\n    Pagination: _en_US2['default'],\n    DatePicker: _en_US4['default'],\n    TimePicker: _en_US6['default'],\n    Calendar: _en_US8['default'],\n    Table: {\n        filterTitle: 'Filter menu',\n        filterConfirm: 'OK',\n        filterReset: 'Reset',\n        emptyText: 'No data',\n        selectAll: 'Select current page',\n        selectInvert: 'Invert current page'\n    },\n    Modal: {\n        okText: 'OK',\n        cancelText: 'Cancel',\n        justOkText: 'OK'\n    },\n    Popconfirm: {\n        okText: 'OK',\n        cancelText: 'Cancel'\n    },\n    Transfer: {\n        titles: ['', ''],\n        notFoundContent: 'Not Found',\n        searchPlaceholder: 'Search here',\n        itemUnit: 'item',\n        itemsUnit: 'items'\n    },\n    Select: {\n        notFoundContent: 'Not Found'\n    },\n    Upload: {\n        uploading: 'Uploading...',\n        removeFile: 'Remove file',\n        uploadError: 'Upload error',\n        previewFile: 'Preview file'\n    }\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = {\n  // Options.jsx\n  items_per_page: '/ page',\n  jump_to: 'Goto',\n  jump_to_confirm: 'confirm',\n  page: '',\n\n  // Pagination.jsx\n  prev_page: 'Previous Page',\n  next_page: 'Next Page',\n  prev_5: 'Previous 5 Pages',\n  next_5: 'Next 5 Pages',\n  prev_3: 'Previous 3 Pages',\n  next_3: 'Next 3 Pages'\n};\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  today: 'Today',\n  now: 'Now',\n  backToToday: 'Back to today',\n  ok: 'Ok',\n  clear: 'Clear',\n  month: 'Month',\n  year: 'Year',\n  timeSelect: 'select time',\n  dateSelect: 'select date',\n  weekSelect: 'Choose a week',\n  monthSelect: 'Choose a month',\n  yearSelect: 'Choose a year',\n  decadeSelect: 'Choose a decade',\n  yearFormat: 'YYYY',\n  dateFormat: 'M/D/YYYY',\n  dayFormat: 'D',\n  dateTimeFormat: 'M/D/YYYY HH:mm:ss',\n  monthBeforeYear: true,\n  previousMonth: 'Previous month (PageUp)',\n  nextMonth: 'Next month (PageDown)',\n  previousYear: 'Last year (Control + left)',\n  nextYear: 'Next year (Control + right)',\n  previousDecade: 'Last decade',\n  nextDecade: 'Next decade',\n  previousCentury: 'Last century',\n  nextCentury: 'Next century'\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _en_US = require('../../date-picker/locale/en_US');\n\nvar _en_US2 = _interopRequireDefault(_en_US);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nexports['default'] = _en_US2['default'];\nmodule.exports = exports['default'];"],"sourceRoot":""}