{"version":3,"sources":["webpack:///./web/pages/overview.tsx","webpack:///./web/components/Logo.tsx","webpack:///./web/components/Layout.tsx"],"names":["_gatsbyLink","_interopRequireDefault","__webpack_require__","React","_reactHelmet","_Layout","l","e","__esModule","default","t","_ref","data","location","createElement","style","minHeight","title","site","siteMetadata","meta","name","content","to","href","query","185","n","r","o","slice","Object","freeze","defineProperties","raw","value","defineProperty","Logo","ColoredText","styled","div","withConfig","displayName","a","extend","_templateObject","_Logo","u","d","Symbol","iterator","constructor","prototype","s","length","enumerable","configurable","writable","key","f","ReferenceError","p","setPrototypeOf","getPrototypeOf","__proto__","m","Header","Content","Footer","exampleRouteRE","trainRouteRE","MainLayout","Component","defaultSelectedKeys","test","this","props","pathname","_layout","background","padding","display","textAlign","width","paddingLeft","paddingRight","flex","float","fontSize","_icon","type","flexDirection","Sider","breakpoint","collapsedWidth","theme","_menu","mode","Item","children","E","252","253"],"mappings":"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","file":"component---web-pages-overview-tsx-0b31b99651808f27f6b4.js","sourcesContent":["import { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Layout from '../components/Layout';\n\nexport default ({ data, location }: any) => {\n    return (\n        <Layout location={location} style={{ minHeight: '95vh' }}>\n            <Helmet\n                title={data.site.siteMetadata.title}\n                meta={[\n                    { name: 'description', content: data.site.siteMetadata.title },\n                    {\n                        content:\n                            'aida, chatito, chatbots, ai, nlu, nlp, natural language processing, tensorflowjs, keras, named entity recognition, text classification',\n                        name: 'keywords'\n                    }\n                ]}\n            />\n            <h1>Create delightful conversational user experiences!</h1>\n            <p>\n                Aida is a natural language understanding pipeline implemented in TensorflowJS and Keras that can run in browsers, nodejs,\n                python or export to mobile devices (keras models can be exported to CoreML for iOS and to Tensorflow Android).\n            </p>\n            The project is a minimalistic implementation because the trained models should be able to run in browsers. This slim model is\n            thanks to fastText n-grams (our embedding layer only uses 3 letter n-grams or less to construct words). This are the main\n            components included:\n            <ul>\n                <li>Easily generate your dataset from cratch using Chatito DSL</li>\n                <li>Pre-trained fastText n-grams embeddings for english (more languages soon)</li>\n                <li>\n                    A Python implementation on top of Keras (trained models can train and predict in python and be exported to js or mobile\n                    environments)\n                </li>\n                <li>A Typescript implementation on top of TensorflowJS (models that can train and predict in the browser and nodejs)</li>\n                <li>Documentation + examples</li>\n            </ul>\n            <p>\n                <Link to=\"/example\" href=\"/example\">\n                    Try the pre-trained examples\n                </Link>\n            </p>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query AboutQuery {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n    }\n`;\n","import '@babel/polyfill';\nimport styled from 'styled-components';\n\n// The Button from the last section without the interpolations\nexport const ColoredText = styled.div`\n    @keyframes text-gradient {\n        to {\n            background-position: -300% center;\n        }\n    }\n    font-weight: bold;\n    color: #1890ff;\n    display: inline-block;\n    text-decoration: none;\n    background-image: linear-gradient(to right, #1890ff 25%, #c4ce35 50%, #ac24e2 75%, #1890ff 100%);\n    background-size: 300% auto;\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n    animation: text-gradient 16s ease-in-out infinite;\n`;\n\nexport const Logo = ColoredText.extend`\n    text-align: center;\n    font-size: 19px;\n`;\n","import '@babel/polyfill';\nimport { Icon, Layout, Menu } from 'antd';\nimport Link from 'gatsby-link';\nimport * as React from 'react';\nimport { Logo } from './Logo';\n\nconst { Header, Content, Footer } = Layout;\n\nconst exampleRouteRE = /^\\/example(\\/.*)?$/i;\nconst trainRouteRE = /^\\/train(\\/.*)?$/i;\n\nexport default class MainLayout extends React.Component<any, {}> {\n    public render() {\n        let defaultSelectedKeys = '0';\n        if (exampleRouteRE.test(this.props.location.pathname)) {\n            defaultSelectedKeys = '1';\n        } else if (trainRouteRE.test(this.props.location.pathname)) {\n            defaultSelectedKeys = '2';\n        }\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Header style={{ background: '#fff', padding: 0, display: 'flex' }}>\n                    <Logo style={{ textAlign: 'right', width: 200, paddingLeft: 24, paddingRight: 24 }}>\n                        <Link to=\"/\" href=\"/\">\n                            {`< Aida />`}\n                        </Link>\n                    </Logo>\n                    <div style={{ flex: 1 }} />\n                    <div style={{ padding: '0 48px 0 24px', display: 'inline-block', textAlign: 'right', float: 'right' }}>\n                        <a href=\"https://github.com/rodrigopivi/aida\" title=\"Aida\" style={{ fontSize: 26 }}>\n                            <Icon type=\"github\" />\n                        </a>\n                    </div>\n                </Header>\n                <Layout style={{ flexDirection: 'row' }}>\n                    <Layout.Sider width={200} breakpoint=\"lg\" collapsedWidth=\"0\" theme=\"light\">\n                        <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[defaultSelectedKeys]}>\n                            <Menu.Item key=\"0\">\n                                <Link to=\"/overview\" href=\"/overview\">\n                                    <Icon type=\"right-circle-o\" />\n                                    Overview\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"1\">\n                                <Link to=\"/example\" href=\"/example\">\n                                    <Icon type=\"right-circle-o\" />\n                                    Pre-trained Example\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link to=\"/train\" href=\"/train\">\n                                    <Icon type=\"right-circle-o\" />\n                                    Train Example\n                                </Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Layout.Sider>\n                    <Layout style={{ padding: '24px 24px 0 24px' }}>\n                        <Content style={{ background: '#fff', padding: 24, minHeight: 280 }}>{this.props.children}</Content>\n                        <Footer style={{ textAlign: 'center' }}>Aida © 2018 Rodrigo Pimentel</Footer>\n                    </Layout>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}